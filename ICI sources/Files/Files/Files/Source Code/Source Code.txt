/**
 * Sorce Code By: Atharva Raj Sinha
 * Software For : Image Computer Institute
 * Soft. Owner  : Rohit Srivastava
 */
import javax.swing.*;
import java.io.*;
import java.awt.event.*;
import java.awt.*;
import java.time.*;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import java.util.Calendar;
import java.time.LocalDate;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.io.FileNotFoundException.*;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;
import java.awt.print.PrinterException;
import java.awt.print.PageFormat;
class ICI
{
    static String sedf="",esr="";
    static String userid,sr=" ",DT=" ";
    static Image icon = Toolkit.getDefaultToolkit().getImage("D:\\ICI\\Icons\\Icon.png");
    JFrame login,ed,f,f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11;
    JLabel lastl,lastln,login1,option,add,fees_submit,search,delete,show,show1,fsub,pr,pass,sign,edc,edc1,all,l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l41,l42,l44;
    JButton b,b1,b2,b3,b4,b5,b6,print,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42;
    JTextField t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t39;
    JPasswordField p1,p2,p3,p4;
    JComboBox cb1,cb2;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    Calendar obj = Calendar.getInstance();
    String G[] = {"A+", "A", "B", "C"};
    String course[] = {"--Select--","Basic","CCC","Hindi Typing", "English Typing", "DTP","DCA with Accounting","DCP","DCA","ADCA","Internet","Job Training"};
    String ftl1,amt,ramt,user,password,cpass,userpass,r,r1,ss,ad,dob,dob1,srn,name,fname,address,qualify,mobile,subject,months,fees,file,file1,text,file2,path,path1,fps,date,file3,file4,file5,file6,ftl,ft2,str,file7,file8,fp1,fp2,fp4,fp6,fp9,fp11,file9,file10,file11,file12,file13,file14,ici,nl,datel,amtl,ramtl,adl,signl,file15,file16,file17,date2,lsd,led,edf,grade,subject1,subject2;
    Date date1,date3,date4,lr=null;
    boolean bool,bool1,bool2,bool3;
    double m,mf,fs,fp,rm,sums,sumr;
    int i,yn,k,yn1,c,j,x,y,fp7,fp10,fp12,nm;
    String sdetails[] = new String[11];
    String fdetails[] = new String[20];
    String upa[] = new String[2];
    String D[] = {"Admission Date : ","Date of Birth       : ","Serial Number   : ","Name                   : ","Father Name      : ","Address              : ","Qualification      : ","Mobile Number  : ","Course Name    : ","Months                : ","Fees                     : "};
    void Login()
    {
        SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        DT = sdf1.format(obj.getTime());
        userid="";
        login = new JFrame("Login");
        
        login1 = new JLabel("LOGIN");
        login1.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        login1.setBounds(150,10,700,40);
        login1.setForeground(new Color(0,0,0));
        
        l27 = new JLabel("Username: ");
        l27.setBounds(50,50,150,40);
        
        t26 = new JTextField();
        t26.setBounds(120,60,150,20);
        
        l28 = new JLabel("Password: ");
        l28.setBounds(50,80,150,40);
        
        p1 = new JPasswordField();
        p1.setBounds(120,90,150,20);
        
        show1 = new JLabel();
        show1.setBounds(120,120,150,20);
        
        b21 = new JButton("Show");
        b21.registerKeyboardAction(b21.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b21.registerKeyboardAction(b21.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b21.setBounds(280,90,69,20);
        b21.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                password = ""+new String(p1.getPassword());
                show1.setText(password);
            }
        }
        );
        
        b22 = new JButton("Login");
        b22.registerKeyboardAction(b22.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b22.registerKeyboardAction(b22.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b22.setBounds(50,140,100,40);
        b22.setForeground(new Color(0, 204, 0));
        b22.setBackground(new Color(255, 255, 204));
        b22.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                user = t26.getText();
                userid = user;
                password = ""+new String(p1.getPassword());
                if(user.equals("") || password.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Empty", "Error", JOptionPane.ERROR_MESSAGE);
                    f2.dispose();
                    Login();
                }
                else
                {
                    try
                    {
                        int a;
                        int n = user.length();
                        char ch, ch1;
                        String F="";
                        for(i=0; i<n; i++)
                        {
                            ch = user.charAt(i);
                            if(ch!=' ')
                            {
                                a = (int)ch;
                                if(a>=65 && a<=77)
                                {
                                    c = a+13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                                else if(a>77 && a<=90)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                                else if(a>=97 && a<=109)
                                {
                                    c = a+13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                                else if(a>109 && a<=122)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                                else if(a>=48 && a<=57)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                                else if(a==64)
                                {
                                    ch1 = ch;
                                    F = F+""+ch1;
                                }
                                else if(a==45)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                                else
                                {
                                    c = a+13;
                                    ch1 = (char)c;
                                    F = F+""+ch1;
                                }
                            }
                            else
                            {
                                c = 45;
                                ch1 = (char)c;
                                F = F+""+ch1;
                            }
                        }
                        n = password.length();
                        String F1="";
                        for(i=0; i<n; i++)
                        {
                            ch = password.charAt(i);
                            if(ch!=' ')
                            {
                                a = (int)ch;
                                if(a>=65 && a<=77)
                                {
                                    c = a+13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                                else if(a>77 && a<=90)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                                else if(a>=97 && a<=109)
                                {
                                    c = a+13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                                else if(a>109 && a<=122)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                                else if(a>=48 && a<=57)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                                else if(a==64)
                                {
                                    ch1 = ch;
                                    F1 = F1+""+ch1;
                                }
                                else if(a==45)
                                {
                                    c = a-13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                                else
                                {
                                    c = a+13;
                                    ch1 = (char)c;
                                    F1 = F1+""+ch1;
                                }
                            }
                            else
                            {
                                c = 45;
                                ch1 = (char)c;
                                F1 = F1+""+ch1;
                            }
                        }
                        file = "D:\\ICI\\Employee\\"+F+".txt";
                        FileReader fr = new FileReader(file);
                        BufferedReader br = new BufferedReader(fr);
                        userpass="";
                        i=0;
                        while((userpass=br.readLine())!=null)
                        {
                            upa[i] = userpass;
                            i=i+1;
                        }
                        if(upa[0].equals(F) && upa[1].equals(F1))
                        {
                             login.dispose();
                             JOptionPane.showMessageDialog(null, "Successfully Login", "Employee Login", 1);
                             Options();
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "You may have enter wrong choice", "Wrong Input", 2);
                        }
                    }
                    catch(IOException h)
                    {
                        login.dispose();
                        JOptionPane.showMessageDialog(null, "Employee Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                        Login();
                    }
                }
            }
        }
        );
        
        b23 = new JButton("Cancel");
        b23.registerKeyboardAction(b23.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b23.registerKeyboardAction(b23.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b23.setBounds(180,140,90,40);
        b23.setForeground(new Color(205, 92, 92));
        b23.setBackground(new Color(255, 255, 204));
        b23.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                login.dispose();
                Exit();
            }
        }
        );
        
        l29 = new JLabel("Trouble in Login?");
        l29.setForeground(Color.red);
        l29.setBounds(10,270,150,40);
        
        b24 = new JButton("Forget Password");
        b24.registerKeyboardAction(b24.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b24.registerKeyboardAction(b24.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b24.setBounds(120,275,150,30);
        b24.setForeground(new Color(205, 92, 92));
        b24.setBackground(new Color(255, 255, 204));
        b24.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                login.dispose();
                Password();
            }
        }
        );
        
        l30 = new JLabel("Create an Account");
        l30.setBounds(10,320,150,40);
        l30.setForeground(new Color(0, 0, 255));
        
        b25 = new JButton("Sign Up");
        b25.registerKeyboardAction(b25.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b25.registerKeyboardAction(b25.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b25.setBounds(120,325,100,30);
        b25.setForeground(new Color(255, 153, 0));
        b25.setBackground(new Color(255, 255, 204));
        b25.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                login.dispose();
                SignUp();
            }
        }
        );
        JButton a = new JButton("About Software"); 
        a.registerKeyboardAction(a.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED); 
        a.registerKeyboardAction(a.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED); 
        a.setBounds(220,370,150,30); 
        a.setForeground(new Color(0,0,0)); 
        a.setBackground(new Color(255, 255, 204));  
        a.addActionListener(new ActionListener() 
        { 
            public void actionPerformed(ActionEvent e) 
            { 
                login.dispose(); 
                About(); 
            } 
        });
        login.add(login1);
        login.add(l27);
        login.add(t26);
        login.add(l28);
        login.add(p1);
        login.add(show1);
        login.add(b21);
        login.add(b22);
        login.add(b23);
        login.add(l29);
        login.add(b24);
        login.add(l30);
        login.add(b25);
        login.add(a);
        
        login.setIconImage(icon);
        login.getContentPane().setBackground(new Color(176, 224, 230));
        login.addWindowListener(new WindowAdapter() 
        {
            @Override
            public void windowClosing(WindowEvent e) 
            {
                login.dispose();
                Exit();
            }
        });
        login.setSize(400,450);
        login.setLocationRelativeTo(null);
        login.setLayout(null);
        login.setVisible(true);
    }
    void About()
    {
        JFrame about=new JFrame(); 
        
        JLabel image = new JLabel(new ImageIcon("D:\\ICI\\ICI sources\\About.png")); 
        image.setBounds(0,0,600,450);
        
        JLabel image1 = new JLabel(new ImageIcon("D:\\ICI\\ICI sources\\About1.png"));
        image1.setBounds(0,0,1780,470); 
        
        about.add(image); 
        about.add(image1); 
        
        about.addWindowListener(new WindowAdapter()  
        { 
            @Override 
            public void windowClosing(WindowEvent e) 
            { 
                about.dispose();  
                Login(); 
            } 
        });
        about.setIconImage(icon); 
        about.getContentPane().setBackground(new Color(255,255,255));
        about.setSize(1205,550); 
        about.setLocationRelativeTo(null);
        about.setLayout(null); 
        about.setVisible(true);
    }
    void Options()
    {
        f = new JFrame("Options");
        try
        {
            FileReader fr = new FileReader("D:\\ICI\\ICI sources\\Date.txt");
            BufferedReader br = new BufferedReader(fr);
            text="";
            String ld1="";
            while((text=br.readLine())!=null)
            {
                ld1 = text;
            }
            br.close();
            lastln = new JLabel(ld1);
            lastln.setBounds(120,200,250,40);
        }
        catch(Exception h)
        {
            System.err.println(h);
        }
        try
        {
            FileReader fr1 = new FileReader("D:\\ICI\\ICI sources\\Date1.txt");
            BufferedReader br1 = new BufferedReader(fr1);
            text="";
            String ld2="";
            while((text=br1.readLine())!=null)
            {
                ld2 = text;
            }
            br1.close();
            lastl = new JLabel(ld2);
            lastl.setBounds(410,200,250,40);
        }
        catch(Exception h)
        {
            System.err.println(h);
        }
        option = new JLabel("IMAGE COMPUTERS");
        option.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        option.setBounds(255,10,700,40);
        option.setForeground(new Color(0,0,255));
        
        b = new JButton("ADD THE STUDENT");
        b.registerKeyboardAction(b.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b.registerKeyboardAction(b.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b.setBounds(60,50,200,35);
        b.setForeground(new Color(255,0,0));
        b.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                Add();
            }
        });
        
        
        b3 = new JButton("SEARCH STUDENTS");
        b3.registerKeyboardAction(b3.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b3.registerKeyboardAction(b3.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b3.setBounds(60,90,200,35);
        b3.setForeground(new Color(255,0,0));
        b3.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                All();
            }
        });
        
        b6 = new JButton("MONTHLY FEES");
        b6.registerKeyboardAction(b6.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b6.registerKeyboardAction(b6.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b6.setBounds(60,130,200,35);
        b6.setForeground(new Color(255,0,0));
        b6.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e){
                f.dispose();
                FE();
            }
        });        
        
        print = new JButton("PRINT RECEIPT");
        print.registerKeyboardAction(print.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        print.registerKeyboardAction(print.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        print.setBounds(60,170,200,35);
        print.setForeground(new Color(255,0,0));
        print.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                Print();
            }
        });
        
        b4 = new JButton("FEES DUE STUDENTS");
        b4.registerKeyboardAction(b4.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b4.registerKeyboardAction(b4.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b4.setBounds(280,50,200,35);
        b4.setForeground(new Color(255,0,0));
        b4.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                FDS();
            }
        });
        
        b5 = new JButton("FEES GIVEN STUDENTS");
        b5.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b5.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b5.setBounds(280,90,200,35);
        b5.setForeground(new Color(255,0,0));
        b5.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                FGS();
            }
        });
        
        b35 = new JButton("ALL FEES GIVEN STUDENTS");
        b35.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b35.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b35.setBounds(280,130,200,35);
        b35.setForeground(new Color(255,0,0));
        b35.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                AGF();
            }
        });
        
        JButton bde = new JButton("STUDENT DETAILS EDIT");
        bde.registerKeyboardAction(bde.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        bde.registerKeyboardAction(bde.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        bde.setBounds(280,170,200,35);
        bde.setForeground(new Color(255,0,0));
        bde.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                DE();
            }
        });
        
        b2 = new JButton("DELETE STUDENT");
        b2.registerKeyboardAction(b2.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b2.registerKeyboardAction(b2.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b2.setBounds(500,50,200,35);
        b2.setForeground(new Color(255,0,0));
        b2.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                Delete();
            }
        });
        
        b36 = new JButton("END DATE CALCULATOR");
        b36.registerKeyboardAction(b36.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b36.registerKeyboardAction(b36.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b36.setBounds(500,90,200,35);
        b36.setForeground(new Color(255,0,0));
        b36.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                EDC();
            }
        });
        
        b37 = new JButton("MONTHLY TOTAL FEES");
        b37.registerKeyboardAction(b37.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b37.registerKeyboardAction(b37.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b37.setBounds(500,130,200,35);
        b37.setForeground(new Color(255,0,0));
        b37.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                TC();
            }
        });
        
        JButton b47 = new JButton("CERTIFICATE PRINT");
        b47.registerKeyboardAction(b47.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b47.registerKeyboardAction(b47.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b47.setBounds(500,170,200,35);
        b47.setForeground(new Color(255,0,0));
        b47.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                Certificate();
            }
        });
        
        b7 = new JButton("EXIT");
        b7.registerKeyboardAction(b7.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b7.registerKeyboardAction(b7.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b7.setBounds(280,230,200,35);
        b7.setForeground(new Color(255,0,0));
        b7.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f.dispose();
                Exit();
            }
        });
        
        f.add(option);
        f.add(b);
        f.add(b2);
        f.add(b3);
        f.add(b4);
        f.add(b5);
        f.add(b6);
        f.add(print);
        f.add(b7);
        f.add(b35);
        f.add(bde);
        f.add(b36);
        f.add(b37);
        f.add(b47);
        f.add(lastl);
        f.add(lastln);
        
        f.setIconImage(icon);
        f.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f.dispose();
                Exit();
            }
        }
        );
        f.setSize(780,330);
        f.getContentPane().setBackground(new Color(176, 224, 230));
        f.setLocationRelativeTo(null);
        f.setLayout(null);
        f.setVisible(true);
    }
    void EDC()
    {
        ed = new JFrame("End Date Calculator");
        
        edc = new JLabel("END DATE OPTIONS");
        edc.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        edc.setBounds(35,10,700,40);
        edc.setForeground(new Color(0,0,0)); 
        
        b38 = new JButton("NORMAL END DATE");
        b38.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b38.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b38.setBounds(60,50,200,35);
        b38.setForeground(new Color(255,0,0));
        b38.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                ed.dispose();
                NED();
            }
        });
        
        b39 = new JButton("LEAVE END DATE");
        b39.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b39.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b39.setBounds(60,90,200,35);
        b39.setForeground(new Color(255,0,0));
        b39.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                ed.dispose();
                LED();
            }
        });
        
        b40 = new JButton("EXIT");
        b40.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b40.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b40.setBounds(60,130,200,35);
        b40.setForeground(new Color(255,0,0));
        b40.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                ed.dispose();
                Options();
            }
        });
        
        ed.add(edc);
        ed.add(b38);
        ed.add(b39);
        ed.add(b40);
        
        ed.setIconImage(icon);
        ed.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                ed.dispose();
                Options();
            }
        }
        );
        ed.setSize(335,230);
        ed.getContentPane().setBackground(new Color(176, 224, 230));
        ed.setLocationRelativeTo(null);
        ed.setLayout(null);
        ed.setVisible(true);
    }
    void NED()
    {
        esr="";
        f11 = new JFrame("End-Date Calculator");
        
        edc1 = new JLabel("END DATE");
        edc1.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        edc1.setBounds(100,10,700,40);
        edc1.setForeground(new Color(0,0,0));
        
        l39 = new JLabel("Serial Number");
        l39.setBounds(50,50,150,40);
        
        t35 = new JTextField();
        t35.setBounds(135,60,150,20);
        
        b41 = new JButton("Find");
        b41.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b41.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b41.setBounds(50,100,90,40);
        b41.setForeground(new Color(0, 204, 0));
        b41.setBackground(new Color(255, 255, 204));
        b41.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                srn = t35.getText();
                esr = srn;
                try
                {
                    file17 = "D:\\ICI\\Students\\"+srn+".txt";
                    FileReader fr = new FileReader(file17);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        sdetails[i] = text;
                        i++;
                    }
                    br.close();
                    ad = sdetails[0];
                    months = sdetails[9];
                    String [] dateParts = ad.split("/");
                    String day = dateParts[0];
                    String month = dateParts[1];
                    String year = dateParts[2];
                    nm = Integer.parseInt(months);
                    String adn = year+"-"+month+"-"+day;
                    LocalDate date1 = LocalDate.parse(adn);
                    LocalDate newDate = date1.plusMonths(nm);
                    LocalDate date3 = newDate.minusDays(1);
                    date2 = date3.toString();
                    String nd[] = date2.split("-");
                    String d1 = nd[2];
                    String m1 = nd[1];
                    String y1 = nd[0];
                    String ndr = d1+"/"+m1+"/"+y1;
                    sedf=ndr;
                    JOptionPane.showMessageDialog(null, "Admission Date : "+ad+"\nCourse End Date: "+ndr, "End Date", 1);
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
        b42 = new JButton("Cancel");
        b42.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b42.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b42.setBounds(190,100,90,40);
        b42.setForeground(new Color(205, 92, 92));
        b42.setBackground(new Color(255, 255, 204));
        b42.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f11.dispose();
                Options();
            }
        });
        
        f11.add(edc1);
        f11.add(l39);
        f11.add(t35);
        f11.add(b41);
        f11.add(b42);
        
        f11.setIconImage(icon);
        f11.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f11.dispose();
                EDC();
            }
        }
        );
        f11.setSize(335,200);
        f11.getContentPane().setBackground(new Color(176, 224, 230));
        f11.setLocationRelativeTo(null);
        f11.setLayout(null);
        f11.setVisible(true);
    }
    void LED()
    {
        esr="";
        f11 = new JFrame("End-Date Calculator");
        
        edc1 = new JLabel("END DATE");
        edc1.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        edc1.setBounds(100,10,700,40);
        edc1.setForeground(new Color(0,0,0));
        
        l39 = new JLabel("Serial Number");
        l39.setBounds(50,50,150,40);
        
        t35 = new JTextField();
        t35.setBounds(145,60,150,20);
        
        l41 = new JLabel("Leave Start Date");
        l41.setBounds(50,80,150,40);
        
        t36 = new JTextField();
        t36.setBounds(145,90,150,20);
        
        l42 = new JLabel("Leave End Date");
        l42.setBounds(50,110,150,40);
        
        t37 = new JTextField();
        t37.setBounds(145,120,150,20);
        
        b41 = new JButton("Find");
        b41.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b41.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b41.setBounds(50,170,90,40);
        b41.setForeground(new Color(0, 204, 0));
        b41.setBackground(new Color(255, 255, 204));
        b41.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                srn = t35.getText();
                esr = srn;
                lsd = t36.getText();
                led = t37.getText();
                try
                {
                    file17 = "D:\\ICI\\Students\\"+srn+".txt";
                    FileReader fr = new FileReader(file17);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        sdetails[i] = text;
                        i++;
                    }
                    br.close();
                    ad = sdetails[0];
                    months = sdetails[9];
                    String [] dateParts = ad.split("/");
                    String day = dateParts[0];
                    String month = dateParts[1];
                    String year = dateParts[2];
                    String adn = year+"-"+month+"-"+day;
                    nm = Integer.parseInt(months);
                    LocalDate date = LocalDate.parse(adn);
                    LocalDate newDate = date.plusMonths(nm);
                    String date7 = newDate.toString();
                    String [] dps = date7.split("-");
                    String day2 = dps[2];
                    String month2 = dps[1];
                    String year2 = dps[0];
                    String adn2 = day2+"/"+month2+"/"+year2;
                    String add1 = adn2;
                    try
                    {
                        TimeUnit time = TimeUnit.DAYS; 
                        date3 = sdf.parse(lsd);
                        date4 = sdf.parse(led);
                        long diff = date4.getTime() - date3.getTime();
                        long difference = time.convert(diff, TimeUnit.MILLISECONDS);
                        long differ = (int)difference;
                        lr = sdf.parse(adn2);
                        long diffe = date3.getTime() - lr.getTime();
                        if(diffe<0)
                        {
                            LocalDate date5 = LocalDate.parse(date7);
                            LocalDate date6 = date5.plusDays(differ);
                            LocalDate date10 = date6.minusDays(1);
                            String date9 = date10.toString();
                            String nd1[] = date9.split("-");
                            String d2 = nd1[2];
                            String m2 = nd1[1];
                            String y2 = nd1[0];
                            String ndr1 = d2+"/"+m2+"/"+y2;
                            sedf = ndr1;
                            JOptionPane.showMessageDialog(null, "Admission Date: "+ad+"\nEnd Date             : "+ndr1, "Success", 1);
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Admission Date: "+ad+"\nEnd Date             : "+add1, "Success", 1);
                            Options();
                        }
                    }
                    catch(ParseException h)
                    {
                        JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
        b42 = new JButton("Cancel");
        b42.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b42.registerKeyboardAction(b5.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b42.setBounds(190,170,90,40);
        b42.setForeground(new Color(205, 92, 92));
        b42.setBackground(new Color(255, 255, 204));
        b42.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                f11.dispose();
                Options();
            }
        });
        
        f11.add(edc1);
        f11.add(l39);
        f11.add(t35);
        f11.add(l41);
        f11.add(t36);
        f11.add(l42);
        f11.add(t37);
        f11.add(b41);
        f11.add(b42);
        
        f11.setIconImage(icon);
        f11.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f11.dispose();
                EDC();
            }
        }
        );
        f11.setSize(345,270);
        f11.getContentPane().setBackground(new Color(176, 224, 230));
        f11.setLocationRelativeTo(null);
        f11.setLayout(null);
        f11.setVisible(true);
    }
    @SuppressWarnings("unchecked")
    void Add()
    {
        sr="";
        f1 = new JFrame("Add Students");
        
        add = new JLabel("ADMISSION FORM");
        add.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        add.setBounds(62,10,700,40);
        add.setForeground(new Color(0,0,0));
        
        l2 = new JLabel("Admission Date ");
        l2.setBounds(50,50,150,40);
        
        t2 = new JTextField();
        t2.setBounds(150,60,150,20);
        
        l3 = new JLabel("Date of Birth  ");
        l3.setBounds(50,80,150,40);
        
        t3 = new JTextField();
        t3.setBounds(150,90,150,20);
        
        l4 = new JLabel("Serial Number  ");
        l4.setBounds(50,110,150,40);
        
        t4 = new JTextField();
        t4.setBounds(150,120,150,20);
        
        l5 = new JLabel("Full Name      ");
        l5.setBounds(50,140,150,40);
        
        t5 = new JTextField();
        t5.setBounds(150,150,150,20);
        
        l6 = new JLabel("Father's Name  ");
        l6.setBounds(50,170,150,40);
        
        t6 = new JTextField();
        t6.setBounds(150,180,150,20);
        
        l7 = new JLabel("Address        ");
        l7.setBounds(50,200,150,40);
        
        t7 = new JTextField();
        t7.setBounds(150,210,150,20);
        
        l8 = new JLabel("Qualification  ");
        l8.setBounds(50,230,150,40);
        
        t8 = new JTextField();
        t8.setBounds(150,240,150,20);
        
        l9 = new JLabel("Mobile Number  ");
        l9.setBounds(50,260,150,40);
        
        t9 = new JTextField();
        t9.setBounds(150,270,150,20);
        
        l10 = new JLabel("Courses Name");
        l10.setBounds(50,290,150,40);
        
        cb1 = new JComboBox(course);
        cb1.setBounds(150,300,150,20);
        
        l11 = new JLabel("Months");
        l11.setBounds(50,320,150,40);
        
        t10 = new JTextField();
        t10.setBounds(150,330,150,20);
        
        l12 = new JLabel("Fees");
        l12.setBounds(50,350,150,40);
        
        t11 = new JTextField();
        t11.setBounds(150,360,150,20);
        
        b8 = new JButton("Add");
        b8.registerKeyboardAction(b8.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b8.registerKeyboardAction(b8.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b8.setBounds(50,400,100,40);
        b8.setForeground(new Color(0, 204, 0));
        b8.setBackground(new Color(255, 255, 204));
        b8.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                k=0;
                ad = t2.getText();
                dob = t3.getText();
                srn = t4.getText();
                sr = srn;
                name = t5.getText();
                fname = t6.getText();
                address = t7.getText();
                qualify = t8.getText();
                mobile = t9.getText();
                subject = ""+cb1.getItemAt(cb1.getSelectedIndex());
                if(subject.equals("Basic"))
                {
                    t10.setText("3");
                }
                if(subject.equals("CCC"))
                {
                    t10.setText("3");
                }
                if(subject.equals("Hindi Typing"))
                {
                    t10.setText("3");
                }
                if(subject.equals("English Typing"))
                {
                    t10.setText("3");
                }
                if(subject.equals("DTP"))
                {
                    t10.setText("6");
                }
                if(subject.equals("DCA with Accounting"))
                {
                    t10.setText("6");
                }
                if(subject.equals("DCP"))
                {
                    t10.setText("6");
                }
                if(subject.equals("ADCA"))
                {
                    t10.setText("12");
                }
                if(subject.equals("Internet"))
                {
                    t10.setText("0.5");
                }
                if(subject.equals("Job Training"))
                {
                    t10.setText("0.5");
                }
                months = t10.getText();
                fees = t11.getText();
                if(srn.equals("") || ad.equals("") || address.equals("") || subject.equals("--Select--") || fees.equals("") || name.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Empty", "Error", JOptionPane.ERROR_MESSAGE);
                    f1.dispose();
                    Add();
                }
                else
                {
                    m = Double.parseDouble(months);
                    mf = Double.parseDouble(fees);
                    mf = mf*m;
                    file1 = "D:\\ICI\\Students\\"+srn+".txt";
                    try
                    {
                        FileWriter fw = new FileWriter(file1);
                        BufferedWriter bw = new BufferedWriter(fw);
                        PrintWriter pw = new PrintWriter(bw);
                        pw.println(ad);
                        pw.println(dob);
                        pw.println(srn);
                        pw.println(name);
                        pw.println(fname);
                        pw.println(address);
                        pw.println(qualify);
                        pw.println(mobile);
                        pw.println(subject);
                        pw.println(months);
                        pw.println(fees);
                        pw.close();
                        f1.dispose();
                        FS();
                    }
                    catch(Exception h)
                    {
                        JOptionPane.showMessageDialog(null, "ErrorU", "Error", JOptionPane.ERROR_MESSAGE);
                        f1.dispose();
                        Add();
                    }
                }
            }
        }
        );
             
        b9 = new JButton("Cancel");
        b9.registerKeyboardAction(b9.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b9.registerKeyboardAction(b9.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b9.setBounds(200,400,90,40);
        b9.setForeground(new Color(205, 92, 92));
        b9.setBackground(new Color(255, 255, 204));
        b9.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancelled", JOptionPane.ERROR_MESSAGE);
                f1.dispose();
                Options();
            }
        }
        );
        
        f1.add(add);
        f1.add(l2);
        f1.add(t2);
        f1.add(l3);
        f1.add(t3);
        f1.add(l4);
        f1.add(t4);
        f1.add(l5);
        f1.add(t5);
        f1.add(l6);
        f1.add(t6);
        f1.add(l7);
        f1.add(t7);
        f1.add(l8);
        f1.add(t8);
        f1.add(l9);
        f1.add(t9);
        f1.add(l10);
        f1.add(cb1);
        f1.add(l11);
        f1.add(t10);
        f1.add(l12);
        f1.add(t11);
        f1.add(b8);
        f1.add(b9);
        
        f1.setIconImage(icon);
        f1.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f1.dispose();
                Options();
            }
        }
        );
        f1.getContentPane().setBackground(new Color(176, 224, 230));
        f1.setSize(370,520);
        f1.setLocationRelativeTo(null);
        f1.setLayout(null);
        f1.setVisible(true);
    }
    void FS()
    {
        f2 = new JFrame("Fees Submit");
        
        fees_submit = new JLabel("ADD THE STUDENTS");
        fees_submit.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        fees_submit.setBounds(80,10,700,40);
        fees_submit.setForeground(new Color(0,0,0));
        
        l13 = new JLabel("How much Fees submitted");
        l13.setBounds(50,50,150,40);
        
        t12 = new JTextField();
        t12.setBounds(210,60,150,20);
        
        l14 = new JLabel("Date");
        l14.setBounds(50,80,150,40);
        
        t13 = new JTextField();
        t13.setBounds(210,90,150,20);
        
        b10 = new JButton("Submit");
        b10.registerKeyboardAction(b10.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b10.registerKeyboardAction(b10.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b10.setBounds(50,130,100,40);
        b10.setForeground(new Color(0, 204, 0));
        b10.setBackground(new Color(255, 255, 204));
        b10.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                k=0;
                fps = t12.getText();
                fp = Double.parseDouble(fps);
                fs = mf-fp;
                date = t13.getText();
                if(fps.equals("") || date.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Empty", "Error", JOptionPane.ERROR_MESSAGE);
                    f2.dispose();
                    FS();
                }
                else
                {
                    file2 = "D:\\ICI\\Fees\\"+srn+".txt";
                    try
                    {
                        FileWriter fw = new FileWriter(file2);
                        BufferedWriter bw = new BufferedWriter(fw);
                        PrintWriter pw = new PrintWriter(bw);
                        pw.println("Total Fees: "+mf);
                        pw.println("Fees Submitted: "+fp+" on Date: "+date+" & Fees Remaining: "+fs);
                        pw.close();
                        JOptionPane.showMessageDialog(null, "Successfully Added the Student", "Add", 1);
                        f2.dispose();
                        Options();
                    }
                    catch(Exception h)
                    {
                        JOptionPane.showMessageDialog(null, "ErrorU", "Error", JOptionPane.ERROR_MESSAGE);
                        f2.dispose();
                        Options();
                    }
                }
            }
        });
        
        b11 = new JButton("Cancel");
        b11.registerKeyboardAction(b11.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b11.registerKeyboardAction(b11.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b11.setBounds(270,130,90,40);
        b11.setForeground(new Color(205, 92, 92));
        b11.setBackground(new Color(255, 255, 204));
        b11.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancelled", JOptionPane.ERROR_MESSAGE);
                f2.dispose();
                Options();
            }
        }
        );
        
        f2.add(fees_submit);
        f2.add(l13);
        f2.add(t12);
        f2.add(l14);
        f2.add(t13);
        f2.add(b10);
        f2.add(b11);
        
        f2.setIconImage(icon);
        f2.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f2.dispose();
                Exit();
            }
        }
        );
        f2.getContentPane().setBackground(new Color(176, 224, 230));
        f2.setSize(430,230);
        f2.setLocationRelativeTo(null);
        f2.setLayout(null);
        f2.setVisible(true);
    }
    void Delete()
    {
        f4 = new JFrame("Delete Student");
        
        delete = new JLabel("DELETE STUDENT");
        delete.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        delete.setBounds(55,10,700,40);
        delete.setForeground(new Color(0,0,0));
        
        l20 = new JLabel("Serial Number");
        l20.setBounds(50,50,150,40);
        
        t19 = new JTextField();
        t19.setBounds(135,60,150,20);
        
        b14 = new JButton("Delete");
        b14.registerKeyboardAction(b14.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b14.registerKeyboardAction(b14.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b14.setBounds(50,100,90,40);
        b14.setForeground(new Color(0, 204, 0));
        b14.setBackground(new Color(255, 255, 204));
        b14.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                if(userid.equals(" "))
                {
                    srn = t19.getText();
                    bool2=false;
                    file5 = "D:\\ICI\\Students\\"+srn+".txt";
                    File df = new File(file5);
                    bool2 = df.delete();
                    if(bool2)
                    {
                        bool3 = false;
                        File df1 = new File("D:\\ICI\\Fees\\"+srn+".txt");
                        bool3 = df1.delete();
                        if(bool3)
                        {
                            JOptionPane.showMessageDialog(null, "Successfully Deleted the Student", "Delete", 1);
                            f4.dispose();
                            Options();
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Fees Details Not Found", "Delete", 1);
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Student Not Found", "Delete", 1);
                    }
                }
                
                else
                {
                    JOptionPane.showMessageDialog(null, "You don't have an access to this", "Delete", 2);
                }
            }
        });
        
        b15 = new JButton("Cancel");
        b15.registerKeyboardAction(b15.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b15.registerKeyboardAction(b15.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b15.setBounds(190,100,90,40);
        b15.setForeground(new Color(205, 92, 92));
        b15.setBackground(new Color(255, 255, 204));
        b15.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancelled", JOptionPane.ERROR_MESSAGE);
                f4.dispose();
                Options();
            }
        }
        );
        
        f4.add(delete);
        f4.add(l20);
        f4.add(t19);
        f4.add(b14);
        f4.add(b15);
        
        f4.setIconImage(icon);
        f4.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f4.dispose();
                Options();
            }
        }
        );
        f4.getContentPane().setBackground(new Color(176, 224, 230));
        f4.setSize(360,200);
        f4.setLocationRelativeTo(null);
        f4.setLayout(null);
        f4.setVisible(true);
    }
    void All()
    {
         f10 = new JFrame("All Student");
       
        all = new JLabel("STUDENT DETAILS");
        all.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        all.setBounds(50,10,700,40);
        all.setForeground(new Color(0,0,0));
       
        l38 = new JLabel("Date of Birth");
        l38.setBounds(50,50,150,40);
       
        t34 = new JTextField();
        t34.setBounds(135,60,150,20);
       
        b33 = new JButton("Search");
        b33.registerKeyboardAction(b33.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b33.registerKeyboardAction(b33.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b33.setBounds(50,90,90,40);
        b33.setForeground(new Color(0, 204, 0));
        b33.setBackground(new Color(255, 255, 204));
        b33.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                dob = t34.getText();
                if(dob.equals(""))
                {
                    JOptionPane.showMessageDialog(null, "Empty", "Error", JOptionPane.ERROR_MESSAGE);
                    f10.dispose();
                    Options();
                }
                else
                {
                    try
                    {
                        path = "D:\\ICI\\Students";
           
                        File folder = new File(path);
                        File[] listOfFiles = folder.listFiles();
                        String files[] = new String[listOfFiles.length];
                        for (j=0; j < listOfFiles.length; j++)
                        {
                            if (listOfFiles[j].isFile())
                            {
                                files[j] = listOfFiles[j].getName();
                            }
                        }
                        for(y=0; y<files.length; y++)
                        {
                            file15 = "D:\\ICI\\Students\\"+files[y];
                            FileReader fr = new FileReader(file15);
                            BufferedReader br = new BufferedReader(fr);
                            i=0;
                            while((fdetails[i])!=null)
                            {
                                sdetails[i] = null;
                                i++;
                            }
                            i=0;
                            text="";
                            while((text=br.readLine())!=null)
                            {
                                sdetails[i] = text;
                                i++;
                            }
                            br.close();
                            dob1 = "";
                            srn = "";
                            dob1 = sdetails[1];
                            srn = sdetails[2];
                            for(i=0; i<D.length; i++)
                            {
                                sdetails[i] = D[i]+""+sdetails[i];
                            }
                            if(dob1.equals(dob))
                            {
                                file16 = "D:\\ICI\\Fees\\"+srn+".txt";
                                final ImageIcon icon2 = new ImageIcon("D:\\ICI\\Photos\\"+srn+".jpg");
                                try
                                {
                                    FileReader fr1 = new FileReader(file16);
                                    BufferedReader br1 = new BufferedReader(fr1);
                                    i=0;
                                    while((fdetails[i])!=null)
                                    {
                                        fdetails[i] = null;
                                        i++;
                                    }
                                    i=0;
                                    text="";
                                    while((text=br1.readLine())!=null)
                                    {
                                        fdetails[i] = text;
                                        i++;
                                    }
                                    i=0;
                                    c=0;
                                    while((fdetails[i])!=null)
                                    {
                                        c++;
                                        i++;
                                    }
                                    br1.close();
                                    if(c==2)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==3)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==4)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==5)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==6)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==7)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==8)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==9)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==10)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==11)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==12)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==13)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==14)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==15)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==16)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==17)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==18)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==19)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    else if(c==20)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18]+"\n"+fdetails[19], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon2);
                                    f10.dispose();
                                    Options();
                                }
                                catch(Exception h)
                                {
                                    JOptionPane.showMessageDialog(null, "Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                        }
                    }
                    catch(Exception h)
                    {
                        JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                        f10.dispose();
                        Options();
                    }
                }
            }
        });
       
        b34 = new JButton("Cancel");
        b34.registerKeyboardAction(b34.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b34.registerKeyboardAction(b34.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b34.setBounds(190,90,90,40);
        b34.setForeground(new Color(205, 92, 92));
        b34.setBackground(new Color(255, 255, 204));
        b34.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancelled", JOptionPane.ERROR_MESSAGE);
                f10.dispose();
                Options();
            }
        }
        );
       
        f10.add(all);
        f10.add(l38);
        f10.add(t34);
        f10.add(b33);
        f10.add(b34);
       
        f10.setIconImage(icon);
        f10.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f10.dispose();
                Options();
            }
        }
        );
        f10.getContentPane().setBackground(new Color(176, 224, 230));
        f10.setSize(350,190);
        f10.setLocationRelativeTo(null);
        f10.setLayout(null);
        f10.setVisible(true);
    }
    void FDS()
    {
        str = sdf.format(obj.getTime());
        String fp8[] = ((str).split("/"));
        fp9 = fp8[1];
        fp11 = fp8[2];
        fp12 = Integer.parseInt(fp11);
        fp12 = fp12+1;
        fp10 = Integer.parseInt(fp9);
        try
        {
            path = "D:\\ICI\\Fees\\"; 

            File folder = new File(path);
            File[] listOfFiles = folder.listFiles(); 
            String files[] = new String[listOfFiles.length];
            for (j=0; j < listOfFiles.length; j++) 
            {
                if (listOfFiles[j].isFile()) 
                {
                    files[j] = listOfFiles[j].getName();
                }
            }
            for(y=0; y<files.length; y++)
            {
                if(!files[y].equals("desktop.ini"))
                {
                    x=0;
                    ftl = "D:\\ICI\\Fees\\"+files[y];
                    FileReader fr = new FileReader(ftl);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        fdetails[i] = null;
                        i++;
                    }
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        fdetails[i] = text;
                        i++;
                    }
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        c=c+1;
                        i++;
                    }
                    x=c-1;
                    if(!fdetails[x].equals("Course Completed & Sucessfully Certified"))
                    {
                        String fp[] = ((fdetails[x]).split("Date: "));
                        fp1 = fp[0];
                        fp2 = fp[1];
                        
                        String fp3[] = ((fp2).split(" "));
                        fp4 = fp3[0];
                        
                        String fp5[] = ((fp4).split("/"));
                        fp6 = fp5[1];
                        fp7 = Integer.parseInt(fp6);
                        
                        String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                        r = fp9[1];
                        rm = Double.parseDouble(r);
                        if(fp7<fp10 && (rm!=0))
                        {
                            try
                            {
                                file7 = "D:\\ICI\\Students\\"+files[y];
                                String srnp[] = files[y].split(".txt");
                                final ImageIcon icon3 = new ImageIcon("D:\\ICI\\Photos\\"+srnp[0]+".jpg");
                                FileReader fr1 = new FileReader(file7);
                                BufferedReader br1 = new BufferedReader(fr1);
                                text="";
                                i=0;
                                while((text=br1.readLine())!=null)
                                {
                                    sdetails[i] = text;
                                    i++;
                                }
                                br.close();
                                for(i=0; i<D.length; i++)
                                {
                                    sdetails[i] = D[i]+""+sdetails[i];
                                }
                                file8 = "D:\\ICI\\Fees\\"+files[y];
                                try
                                {
                                    FileReader fr2 = new FileReader(file8);
                                    BufferedReader br2 = new BufferedReader(fr2);
                                    text="";
                                    i=0;
                                    while((text=br2.readLine())!=null)
                                    {
                                        fdetails[i] = text;
                                        i++;
                                    }
                                    i=0;
                                    c=0;
                                    while(fdetails[i]!=null)
                                    {
                                        c=c+1;
                                        i++;
                                    }
                                    if(c==2)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==3)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==4)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==5)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==6)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==7)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==8)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==9)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==10)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==11)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==12)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==13)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==14)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==15)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==16)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==17)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==18)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==19)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                    else if(c==20)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18]+"\n"+fdetails[19], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon3);
                                }
                                catch(Exception h)
                                {
                                    JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            catch(Exception h)
                            {
                                JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            }
        }
        catch(Exception h)
        {
            JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
        }
        Options();
    }
    void FGS()
    {
        str = sdf.format(obj.getTime());
        String fp8[] = ((str).split("/"));
        fp9 = fp8[1];
        fp11 = fp8[2];
        fp12 = Integer.parseInt(fp11);
        fp12 = fp12+1;
        fp10 = Integer.parseInt(fp9);
        try
        {
            path = "D:\\ICI\\Fees\\"; 

            File folder = new File(path);
            File[] listOfFiles = folder.listFiles(); 
            String files[] = new String[listOfFiles.length];
            for (j=0; j < listOfFiles.length; j++) 
            {
                if (listOfFiles[j].isFile()) 
                {
                    files[j] = listOfFiles[j].getName();
                }
            }
            for(y=0; y<files.length; y++)
            {
                if(!files[y].equals("desktop.ini"))
                {
                    x=0;
                    ftl = "D:\\ICI\\Fees\\"+files[y];
                    FileReader fr = new FileReader(ftl);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        fdetails[i] = null;
                        i++;
                    }
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        fdetails[i] = text;
                        i++;
                    }
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        c=c+1;
                        i++;
                    }
                    x=c-1;
                    if(!fdetails[x].equals("Course Completed & Sucessfully Certified"))
                    {
                        String fp[] = ((fdetails[x]).split("Date: "));
                        fp1 = fp[0];
                        fp2 = fp[1];
                        
                        String fp3[] = ((fp2).split(" "));
                        fp4 = fp3[0];
                        
                        String fp5[] = ((fp4).split("/"));
                        fp6 = fp5[1];
                        fp7 = Integer.parseInt(fp6);
                        
                        String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                        r = fp9[1];
                        rm = Double.parseDouble(r);
                        if(fp7==fp10 && (rm!=0))
                        {
                            try
                            {
                                file7 = "D:\\ICI\\Students\\"+files[y];
                                String srnp[] = files[y].split(".txt");
                                final ImageIcon icon4 = new ImageIcon("D:\\ICI\\Photos\\"+srnp[0]+".jpg");
                                FileReader fr1 = new FileReader(file7);
                                BufferedReader br1 = new BufferedReader(fr1);
                                text="";
                                i=0;
                                while((text=br1.readLine())!=null)
                                {
                                    sdetails[i] = text;
                                    i++;
                                }
                                br.close();
                                for(i=0; i<D.length; i++)
                                {
                                    sdetails[i] = D[i]+""+sdetails[i];
                                }
                                file8 = "D:\\ICI\\Fees\\"+files[y];
                                try
                                {
                                    FileReader fr2 = new FileReader(file8);
                                    BufferedReader br2 = new BufferedReader(fr2);
                                    text="";
                                    i=0;
                                    while((text=br2.readLine())!=null)
                                    {
                                        fdetails[i] = text;
                                        i++;
                                    }
                                    i=0;
                                    c=0;
                                    while(fdetails[i]!=null)
                                    {
                                        c=c+1;
                                        i++;
                                    }
                                    if(c==2)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==3)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==4)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==5)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==6)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==7)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==8)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==9)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==10)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==11)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==12)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==13)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==14)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==15)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==16)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==17)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==18)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==19)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==20)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18]+"\n"+fdetails[19], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                }
                                catch(Exception h)
                                {
                                    JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            catch(Exception h)
                            {
                                JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            }
        }
        catch(Exception h)
        {
            JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
        }
        Options();
    }
    void AGF()
    {
        str = sdf.format(obj.getTime());
        String fp8[] = ((str).split("/"));
        fp9 = fp8[1];
        fp11 = fp8[2];
        fp12 = Integer.parseInt(fp11);
        fp12 = fp12+1;
        fp10 = Integer.parseInt(fp9);
        try
        {
            path = "D:\\ICI\\Fees\\"; 

            File folder = new File(path);
            File[] listOfFiles = folder.listFiles(); 
            String files[] = new String[listOfFiles.length];
            for (j=0; j < listOfFiles.length; j++) 
            {
                if (listOfFiles[j].isFile()) 
                {
                    files[j] = listOfFiles[j].getName();
                }
            }
            for(y=0; y<files.length; y++)
            {
                if(!files[y].equals("desktop.ini"))
                {
                    x=0;
                    ftl = "D:\\ICI\\Fees\\"+files[y];
                    FileReader fr = new FileReader(ftl);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        fdetails[i] = null;
                        i++;
                    }
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        fdetails[i] = text;
                        i++;
                    }
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        c=c+1;
                        i++;
                    }
                    x=c-1;
                    if(!fdetails[x].equals("Course Completed & Sucessfully Certified"))
                    {
                        String fp[] = ((fdetails[x]).split("Date: "));
                        fp1 = fp[0];
                        fp2 = fp[1];
                        
                        String fp3[] = ((fp2).split(" "));
                        fp4 = fp3[0];
                        
                        String fp5[] = ((fp4).split("/"));
                        fp6 = fp5[1];
                        fp7 = Integer.parseInt(fp6);
                        
                        String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                        r = fp9[1];
                        rm = Double.parseDouble(r);
                        if(rm==0)
                        {
                            try
                            {
                                file7 = "D:\\ICI\\Students\\"+files[y];
                                String srnp[] = files[y].split(".txt");
                                final ImageIcon icon4 = new ImageIcon("D:\\ICI\\Photos\\"+srnp[0]+".jpg");
                                FileReader fr1 = new FileReader(file7);
                                BufferedReader br1 = new BufferedReader(fr1);
                                text="";
                                i=0;
                                while((text=br1.readLine())!=null)
                                {
                                    sdetails[i] = text;
                                    i++;
                                }
                                br.close();
                                for(i=0; i<D.length; i++)
                                {
                                    sdetails[i] = D[i]+""+sdetails[i];
                                }
                                file8 = "D:\\ICI\\Fees\\"+files[y];
                                try
                                {
                                    FileReader fr2 = new FileReader(file8);
                                    BufferedReader br2 = new BufferedReader(fr2);
                                    text="";
                                    i=0;
                                    while((text=br2.readLine())!=null)
                                    {
                                        fdetails[i] = text;
                                        i++;
                                    }
                                    i=0;
                                    c=0;
                                    while(fdetails[i]!=null)
                                    {
                                        c=c+1;
                                        i++;
                                    }
                                    if(c==2)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==3)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==4)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==5)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==6)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==7)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==8)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==9)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==10)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==11)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==12)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==13)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==14)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==15)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==16)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==17)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==18)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==19)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                    else if(c==20)
                                        JOptionPane.showMessageDialog(null, sdetails[0]+"\n"+sdetails[1]+"\n"+sdetails[2]+"\n"+sdetails[3]+"\n"+sdetails[4]+"\n"+sdetails[5]+"\n"+sdetails[6]+"\n"+sdetails[7]+"\n"+sdetails[8]+"\n"+sdetails[9]+"\n"+sdetails[10]+"\n"+fdetails[0]+"\n"+fdetails[1]+"\n"+fdetails[2]+"\n"+fdetails[3]+"\n"+fdetails[4]+"\n"+fdetails[5]+"\n"+fdetails[6]+"\n"+fdetails[7]+"\n"+fdetails[8]+"\n"+fdetails[9]+"\n"+fdetails[10]+"\n"+fdetails[11]+"\n"+fdetails[12]+"\n"+fdetails[13]+"\n"+fdetails[14]+"\n"+fdetails[15]+"\n"+fdetails[16]+"\n"+fdetails[17]+"\n"+fdetails[18]+"\n"+fdetails[19], "Fee Details", JOptionPane.PLAIN_MESSAGE, icon4);
                                }
                                catch(Exception h)
                                {
                                    JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            catch(Exception h)
                            {
                                JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            }
        }
        catch(Exception h)
        {
            JOptionPane.showMessageDialog(null,"Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
        }
        Options();
    }
    void FE()
    {
        f6 = new JFrame("Fees Submit");
        
        JLabel namewo = new JLabel();
        namewo.setBounds(10,15,150,40);
        JLabel namewo1 = new JLabel();
        namewo1.setBounds(10,30,150,40);
        
        fsub = new JLabel("FEES SUBMIT");
        fsub.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        fsub.setBounds(130,10,700,40);
        fsub.setForeground(new Color(0,0,0));
        
        l24 = new JLabel("Serial Number");
        l24.setBounds(50,50,150,40);
        
        t23 = new JTextField();
        t23.setBounds(210,60,150,20);
        
        l25 = new JLabel("How much Fees Submitted");
        l25.setBounds(50,80,200,40);
        
        t24 = new JTextField();
        t24.setBounds(210,90,150,20);
        
        l26 = new JLabel("Date");
        l26.setBounds(50,110,150,40);
        
        t25 = new JTextField();
        t25.setBounds(210,120,150,20);
        
        b21 = new JButton("Show");
        b21.registerKeyboardAction(b21.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b21.registerKeyboardAction(b21.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b21.setBounds(320,10,69,20);
        b21.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                srn = t23.getText();
                try
                {
                    FileReader fr = new FileReader("D:\\ICI\\Students\\"+srn+".txt");
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        sdetails[i] = text;
                        i++;
                    }
                    br.close();
                    name = sdetails[3];
                    namewo.setText(name);
                    namewo1.setText(sdetails[10]);
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        );
        
        b18 = new JButton("Submit");
        b18.registerKeyboardAction(b18.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b18.registerKeyboardAction(b18.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b18.setBounds(40,150,80,40);
        b18.setForeground(new Color(0, 204, 0));
        b18.setBackground(new Color(255, 255, 204));
        b18.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                srn = t23.getText();
                sr = srn;
                file9 = "D:\\ICI\\Fees\\"+srn+".txt";
                try
                {
                    FileReader fr = new FileReader(file9);
                    BufferedReader br = new BufferedReader(fr);
                    i=0;
                    while((fdetails[i])!=null)
                    {
                        fdetails[i] = null;
                        i++;
                    }
                    text="";
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        fdetails[i] = text;
                        i++;
                    }
                    i=0;
                    c=0;
                    while((fdetails[i])!=null)
                    {
                        c=c+1;
                        i++;
                    }
                    fps = t24.getText();
                    fp = Double.parseDouble(fps);
                    String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                    r = fp9[1];
                    double mf1 = Double.parseDouble(r);
                    mf = mf1-fp;
                    date = t25.getText();
                    if(date=="")
                    {
                        JOptionPane.showMessageDialog(null, "Empty", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else
                    {
                        if(mf1>0 || mf1>0.0)
                        {
                            try
                            {
                                file9 = "D:\\ICI\\Fees\\"+srn+".txt";
                                FileWriter fw = new FileWriter(file9);
                                BufferedWriter bw = new BufferedWriter(fw);
                                PrintWriter pw = new PrintWriter(bw);
                                for(i=0; i<c; i++)
                                {
                                    pw.println(fdetails[i]);
                                }
                                pw.println("Fees Submitted: "+fp+" on Date: "+date+" & Fees Remaining: "+mf);
                                pw.close();
                                JOptionPane.showMessageDialog(null, "Successfully Updated", "Fees Submit", 1);
                                f6.dispose();
                                Options();
                            }
                            catch(Exception h)
                            {
                                JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Already, all fees is submitted", "Fees Submit", 1);
                        }
                    }
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
        b19 = new JButton("Complete");
        b19.registerKeyboardAction(b19.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b19.registerKeyboardAction(b19.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b19.setBounds(130,150,90,40);
        b19.setForeground(new Color(0,204,0));
        b19.setBackground(new Color(255, 255, 204));
        b19.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                if(userid.equals(" "))
                {
                    date = t25.getText();
                    if(date.equals(""))
                    {
                        str = sdf.format(obj.getTime());
                        srn = t23.getText();
                        sr = srn;
                        file10 = "D:\\ICI\\Fees\\"+srn+".txt";
                        try
                        {
                            FileReader fr = new FileReader(file10);
                            BufferedReader br = new BufferedReader(fr);
                            i=0;
                            while((fdetails[i])!=null)
                            {
                                fdetails[i] = null;
                                i++;
                            }
                            text="";
                            i=0;
                            while((text=br.readLine())!=null)
                            {
                                fdetails[i] = text;
                                i++;
                            }
                            i=0;
                            c=0;
                            while((fdetails[i])!=null)
                            {
                                c=c+1;
                                i++;
                            }
                            String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                            r = fp9[1];
                            rm = Double.parseDouble(r);
                            if(rm>0)
                            {
                                mf = 0;
                                try
                                {
                                    file10 = "D:\\ICI\\Fees\\"+srn+".txt";
                                    FileWriter fw = new FileWriter(file10);
                                    BufferedWriter bw = new BufferedWriter(fw);
                                    PrintWriter pw = new PrintWriter(bw);
                                    for(i=0; i<c; i++)
                                    {
                                        pw.println(fdetails[i]);
                                    }
                                    pw.println("Fees Submitted: "+r+" on Date: "+str+" & Fees Remaining: "+mf);
                                    pw.close();
                                    JOptionPane.showMessageDialog(null, "Successfully Updated", "Fees Submit", 1);
                                    f6.dispose();
                                    Options();
                                }
                                catch(Exception h)
                                {
                                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "Already, all fees is submitted", "Fees Submit", 1);
                            }
                        }
                        catch(Exception h)
                        {
                            JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    else
                    {
                        srn = t23.getText();
                        sr = srn;
                        file10 = "D:\\ICI\\Fees\\"+srn+".txt";
                        try
                        {
                            FileReader fr = new FileReader(file10);
                            BufferedReader br = new BufferedReader(fr);
                            i=0;
                            while((fdetails[i])!=null)
                            {
                                fdetails[i] = null;
                                i++;
                            }
                            text="";
                            i=0;
                            while((text=br.readLine())!=null)
                            {
                                fdetails[i] = text;
                                i++;
                            }
                            i=0;
                            c=0;
                            while((fdetails[i])!=null)
                            {
                                c=c+1;
                                i++;
                            }
                            String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                            r = fp9[1];
                            rm = Double.parseDouble(r);
                            if(rm>0)
                            {
                                mf = 0;
                                try
                                {
                                    file10 = "D:\\ICI\\Fees\\"+srn+".txt";
                                    FileWriter fw = new FileWriter(file10);
                                    BufferedWriter bw = new BufferedWriter(fw);
                                    PrintWriter pw = new PrintWriter(bw);
                                    for(i=0; i<c; i++)
                                    {
                                        pw.println(fdetails[i]);
                                    }
                                    pw.println("Fees Submitted: "+r+" on Date: "+date+" & Fees Remaining: "+mf);
                                    pw.close();
                                    JOptionPane.showMessageDialog(null, "Successfully Updated", "Fees Submit", 1);
                                    f6.dispose();
                                    Options();
                                }
                                catch(Exception h)
                                {
                                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "Already, all fees is submitted", "Fees Submit", 1);
                            }
                        }
                        catch(Exception h)
                        {
                            JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "You don't have an access to this", "Fees Submit", 2);
                }
            }
        });
        
        b20 = new JButton("Course Complete");
        b20.registerKeyboardAction(b20.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b20.registerKeyboardAction(b20.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b20.setBounds(230,150,140,40);
        b20.setForeground(new Color(205, 92, 92));
        b20.setBackground(new Color(255, 255, 204));
        b20.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                if(userid.equals(" "))
                {
                    srn = t23.getText();
                    sr = srn;
                    file11 = "D:\\ICI\\Fees\\"+srn+".txt";
                    try
                    {
                        FileReader fr = new FileReader(file11);
                        BufferedReader br = new BufferedReader(fr);
                        i=0;
                        while((fdetails[i])!=null)
                        {
                            fdetails[i] = null;
                            i++;
                        }
                        text="";
                        i=0;
                        while((text=br.readLine())!=null)
                        {
                            fdetails[i] = text;
                            i++;
                        }
                        i=0;
                        c=0;
                        while((fdetails[i])!=null)
                        {
                            c=c+1;
                            i++;
                        }
                        String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                        r = fp9[1];
                        rm = Double.parseDouble(r);
                        if(rm==0)
                        {
                            try
                            {
                                file11 = "D:\\ICI\\Fees\\"+srn+".txt";
                                FileWriter fw = new FileWriter(file11);
                                BufferedWriter bw = new BufferedWriter(fw);
                                PrintWriter pw = new PrintWriter(bw);
                                for(i=0; i<c; i++)
                                {
                                    pw.println(fdetails[i]);
                                }
                                pw.println("Course Completed & Successfully Certified");
                                pw.close();
                                JOptionPane.showMessageDialog(null, "Successfully Updated", "Fees Submit", 1);
                                f6.dispose();
                                Options();
                            }
                            catch(Exception h)
                            {
                                JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, r+" Fees is not Submitted", "Fees Submit", 1);
                        }
                    }
                    catch(Exception h)
                    {
                        JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "You don't have an access to this", "Fees Submit", 2);
                }
            }
        }
        );
        
        f6.add(namewo);
        f6.add(namewo1);
        f6.add(b21);
        f6.add(fsub);
        f6.add(l24);
        f6.add(l25);
        f6.add(l26);
        f6.add(t23);
        f6.add(t24);
        f6.add(t25);
        f6.add(b18);
        f6.add(b19);
        f6.add(b20);
        
        f6.setIconImage(icon);
        f6.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                f6.dispose();
                Options();
            }
        }
        );
        f6.getContentPane().setBackground(new Color(176, 224, 230));
        f6.setSize(440,250);
        f6.setLocationRelativeTo(null);
        f6.setLayout(null);
        f6.setVisible(true);
    }
    void Print()
    {
        f9 = new JFrame("Print Receipt");
        
        pr = new JLabel("PRINT RECEIPT");
        pr.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        pr.setBounds(70,10,700,40);
        pr.setForeground(new Color(0,0,0));
        
        l37 = new JLabel("Serial Number");
        l37.setBounds(50,50,150,40);
        
        t33 = new JTextField();
        t33.setBounds(135,60,150,20);
        
        b31 = new JButton("Show");
        b31.registerKeyboardAction(b31.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b31.registerKeyboardAction(b31.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b31.setBounds(70,90,90,40);
        b31.setForeground(new Color(0, 204, 0));
        b31.setBackground(new Color(255, 255, 204));
        b31.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                srn = t33.getText();
                file13 = "D:\\ICI\\Students\\"+srn+".txt";
                try
                {
                    FileReader fr = new FileReader(file13);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        sdetails[i] = text;
                        i++;
                    }
                    name = sdetails[3];
                    ad = sdetails[0];
                    file14 = "D:\\ICI\\Fees\\"+srn+".txt";
                    try
                    {
                        FileReader fr1 = new FileReader(file14);
                        BufferedReader br1 = new BufferedReader(fr1);
                        i=0;
                        while((fdetails[i])!=null)
                        {
                            fdetails[i] = null;
                            i++;
                        }
                        text="";
                        i=0;
                        while((text=br1.readLine())!=null)
                        {
                            fdetails[i] = text;
                            i++;
                        }
                        i=0;
                        c=0;
                        while((fdetails[i])!=null)
                        {
                            c=c+1;
                            i++;
                        }
                        x = c-1;
                        if((fdetails[x]).startsWith("Course"))
                        {
                            x = x-1;
                            String fp[] = (fdetails[x]).split("Fees Submitted: ");
                            fp1 = fp[1];
                            
                            String fp3[] = (fp1).split(" on ");
                            fp2 = fp3[1];
                            
                            String fp5[] = (fp2).split(": ");
                            fp4 = fp5[1];
                            
                            String fp7[] = (fp4).split(" ");
                            
                            amt = fp3[0];
                            date = fp7[0];
                            ramt = fp5[2];
                            
                            ici = "   IMAGE   COMPUTER   INSTITUTE    ";
                            nl = "Name                    : "+name;
                            adl = "Admission Date    : "+ad;
                            datel = "Fees Date              : "+date;
                            amtl = "Fees Amount         : "+amt;
                            ramtl = "Fees Remaining     : "+ramt;
                            signl = "Signature";
                        }
                        else if((fdetails[x]).startsWith("Fees"))
                        {
                            String fp[] = (fdetails[x]).split("Fees Submitted: ");
                            fp1 = fp[1];
                            
                            String fp3[] = (fp1).split(" on ");
                            fp2 = fp3[1];
                            
                            String fp5[] = (fp2).split(": ");
                            fp4 = fp5[1];
                            
                            String fp7[] = (fp4).split(" ");
                            
                            amt = fp3[0];
                            date = fp7[0];
                            ramt = fp5[2];
                            
                            ici = "   IMAGE   COMPUTER   INSTITUTE    ";
                            nl = "Name                    : "+name;
                            adl = "Admission Date    : "+ad;
                            datel = "Fees Date              : "+date;
                            amtl = "Fees Amount         : "+amt;
                            ramtl = "Fees Remaining     : "+ramt;
                            signl = "Signature";
                        }
                        yn = JOptionPane.showConfirmDialog(null, ici+"\n\n"+nl+"\n"+adl+"\n"+datel+"\n"+amtl+"\n"+ramtl+"\n\n\n"+signl+"\n\nDo you want to Print!", "Print Receipt", JOptionPane.YES_NO_CANCEL_OPTION);
                        if(yn==0)
                        {
                            f9.dispose();
                            P();
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancel", JOptionPane.ERROR_MESSAGE);
                            f9.dispose();
                            Options();
                        }
                    }
                    catch(Exception h)
                    {
                        JOptionPane.showMessageDialog(null, "Student Fees Details Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
        b32 = new JButton("Cancel");
        b32.registerKeyboardAction(b32.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b32.registerKeyboardAction(b32.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b32.setBounds(180,90,90,40);
        b32.setForeground(new Color(205, 92, 92));
        b32.setBackground(new Color(255, 255, 204));
        b32.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                f9.dispose();
                Options();
            }
        }
        );
        
        f9.add(pr);
        f9.add(l37);
        f9.add(t33);
        f9.add(b31);
        f9.add(b32);
        
        f9.setIconImage(icon);
        f9.getContentPane().setBackground(new Color(176, 224, 230));
        f9.addWindowListener(new WindowAdapter() 
        {
            @Override
            public void windowClosing(WindowEvent e) 
            {
                f9.dispose();
                Options();
            }
        });
        f9.setSize(360,190);
        f9.setLocationRelativeTo(null);
        f9.setLayout(null);
        f9.setVisible(true);
    }
    void P()
    {
        JFrame frame = new JFrame("Print Receipt");
        
        JLabel image = new JLabel(new ImageIcon("D:\\ICI\\Icons\\Background.png"));
        image.setBounds(195,0,200,200);
        
        JLabel label = new JLabel(ici);
        label.setBounds(120,0,500,20);
        label.setFont(new Font("Times New Roman",Font.BOLD,20));
        
        JLabel label1 = new JLabel(nl);
        label1.setBounds(195,30,300,20);
        label1.setFont(new Font("Times New Roman",Font.BOLD,10));
        
        JLabel label2 = new JLabel(adl);
        label2.setBounds(195,50,300,20);
        label2.setFont(new Font("Times New Roman",Font.BOLD,10));
        
        JLabel label3 = new JLabel(datel);
        label3.setBounds(195,70,300,20);
        label3.setFont(new Font("Times New Roman",Font.BOLD,10));
        
        JLabel label4 = new JLabel(amtl);
        label4.setBounds(195,90,300,20);
        label4.setFont(new Font("Times New Roman",Font.BOLD,10));
        
        JLabel label5 = new JLabel(ramtl);
        label5.setBounds(195,110,300,20);
        label5.setFont(new Font("Times New Roman",Font.BOLD,10));
        
        JLabel label6 = new JLabel(signl);
        label6.setBounds(195,150,300,20);
        label6.setFont(new Font("Times New Roman",Font.BOLD,10));
        
        frame.add(label);
        frame.add(label1);
        frame.add(label2);
        frame.add(label3);
        frame.add(label4);
        frame.add(label5);
        frame.add(label6);
        frame.add(image);
        frame.getContentPane().setBackground(new Color(255,255,255));
        frame.setIconImage(icon);
        frame.setSize(600,230);
        frame.setLayout(null);
        frame.setVisible(true);
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable(new Printable() 
        {
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
            throws PrinterException
            {
                if (pageIndex >= 1) {
                    return Printable.NO_SUCH_PAGE;
                } else {
                    ((Graphics2D)graphics).translate(pageFormat.getImageableX(), pageFormat.getImageableY());
                    frame.print(graphics);
                    return Printable.PAGE_EXISTS;
                }
            }
        });
        try
        {
            if(job.printDialog())
            {
                job.print();
                Thread.sleep(2000);
                frame.dispose();
                JOptionPane.showMessageDialog(null, "Successfully Printed", "Print Receipt", 1);
                Options();
            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Cancelled", "Print Receipt", JOptionPane.ERROR_MESSAGE);
            Options();
        }
    }
    void TC()
    {
        double sf=0.0;
        sums=0.0;
        sumr=0.0;
        str = sdf.format(obj.getTime());
        String fp8[] = ((str).split("/"));
        fp9 = fp8[1];
        fp10 = Integer.parseInt(fp9);
        try
        {
            path = "D:\\ICI\\Fees\\"; 

            File folder = new File(path);
            File[] listOfFiles = folder.listFiles(); 
            String files[] = new String[listOfFiles.length];
            for (j=0; j < listOfFiles.length; j++) 
            {
                if (listOfFiles[j].isFile()) 
                {
                    files[j] = listOfFiles[j].getName();
                }
            }
            for(y=0; y<files.length; y++)
            {
                if(!files[y].equals("desktop.ini"))
                {
                    x=0;
                    ftl = "D:\\ICI\\Fees\\"+files[y];
                    FileReader fr = new FileReader(ftl);
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        fdetails[i] = null;
                        i++;
                    }
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        fdetails[i] = text;
                        i++;
                    }
                    i=0;
                    c=0;
                    while(fdetails[i]!=null)
                    {
                        c=c+1;
                        i++;
                    }
                    x=c-1;
                    ftl1 = "D:\\ICI\\Students\\"+files[y];
                    FileReader fr1 = new FileReader(ftl1);
                    BufferedReader br1 = new BufferedReader(fr1);
                    text="";
                    i=0;
                    while((text=br1.readLine())!=null)
                    {
                        sdetails[i] = text;
                        i++;
                    }
                    br1.close();
                    if(!fdetails[x].equals("Course Completed & Sucessfully Certified"))
                    {
                        String fp[] = ((fdetails[x]).split("Date: "));
                        fp1 = fp[0];
                        fp2 = fp[1];
                        
                        String fp3[] = ((fp2).split(" "));
                        fp4 = fp3[0];
                        
                        String fp5[] = ((fp4).split("/"));
                        fp6 = fp5[1];
                        fp7 = Integer.parseInt(fp6);
                        
                        String fp99[] = ((fdetails[c-1]).split("Fees Submitted: "));
                        String sfr = fp99[1];
                        String fp100[] = sfr.split(" ");
                        String sfs = fp100[0];
                        sf = Double.parseDouble(sfs);
                        
                        String fp9[] = fdetails[c-1].split("Fees Remaining: ");
                        r = fp9[1];
                        rm = Double.parseDouble(r);
                        System.out.println(sf+"\t"+rm);
                        if(fp7==fp10 && (rm!=0))
                        {
                            if((Double.parseDouble(sdetails[10]))==sf)
                            {
                                sums = sums + Double.parseDouble(sdetails[10]);
                            }
                            else
                            {
                                sums = sums + sf;
                            }
                        }
                        if(fp7<fp10 && (rm!=0))
                        {
                            sumr = sumr + Double.parseDouble(sdetails[10]);
                        }
                        System.out.println(sums+"\t"+sumr+"\n");
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Fees Submitted in this Month: "+sums+"\n\nFees Remaining in this Month: "+sumr, "Monthy Total Fees", 1);
            Options();
        }
        catch(Exception h)
        {
            JOptionPane.showMessageDialog(null, "Error: "+h);
            Options();
        }
    }
    @SuppressWarnings("unchecked")
    void Certificate()
    {
        subject1="";
        subject2="";
        if(userid.equals(" "))
        {
            JFrame f13 = new JFrame("Certificate of Student");
        
            JLabel cs = new JLabel("Student Certificate");
            cs.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
            cs.setBounds(40,10,700,40);
            cs.setForeground(new Color(0,0,0));
            
            JLabel l43 = new JLabel("Serial Number");
            l43.setBounds(50,50,150,40);
            
            JTextField t38 = new JTextField();
            t38.setBounds(135,60,150,20);
            
            JButton b43 = new JButton("Find");
            b43.registerKeyboardAction(b43.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
            b43.registerKeyboardAction(b43.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
            b43.setBounds(50,90,90,40);
            b43.setForeground(new Color(0, 204, 0));
            b43.setBackground(new Color(255, 255, 204));
            b43.addActionListener(new ActionListener()
            {
                public void actionPerformed(ActionEvent e)
                {
                    f13.dispose();
                    srn = t38.getText();
                    String file18 = "D:\\ICI\\Students\\"+srn+".txt";
                    try
                    {
                        FileReader fr = new FileReader(file18);
                        BufferedReader br = new BufferedReader(fr);
                        text="";
                        i=0;
                        while((text=br.readLine())!=null)
                        {
                            sdetails[i] = text;
                            i++;
                        }
                        br.close();
                        ad = sdetails[0];
                        name = sdetails[3];
                        fname = sdetails[4];
                        subject = sdetails[8];
                        months = sdetails[9];
                        if(subject.equals("Basic"))
                        {
                            subject1 = "Windows, MS-Office (Microsoft Word, Excel,";
                            subject2 = "Powerpoint), Internet Working [BASIC]";
                        }
                        else if(subject.equals("CCC"))
                        {
                            subject1 = "Course on Computer Concepts (NIELIT SYLLABUS)";
                            subject2 = "[CCC]";
                        }
                        else if(subject.equals("English Typing"))
                        {
                            subject1 = "English Typing";
                            subject2 = "";
                        }
                        else if(subject.equals("Hindi Typing"))
                        {
                            subject1 = "Hindi Typing";
                            subject2 = "";
                        }
                        else if(subject.equals("DTP"))
                        {
                            subject1 = "Windows, MS-Office, PageMaker, Coral Draw";
                            subject2 = "& Photoshop [DTP]";
                        }
                        else if(subject.equals("DCA with Accounting"))
                        {
                            subject1 = "Windows, MS-Office (Microsoft Word, Excel,";
                            subject2 = "Powerpoint), Internet Working & Tally ERP-9 [DCA]";
                        }
                        else if(subject.equals("DCA"))
                        {
                            subject1 = "Windows, MS-Office (Microsoft Word, Excel,";
                            subject2 = "Powerpoint), Internet Working [DCA]";
                        }
                        else if(subject.equals("ADCA"))
                        {
                            subject1 = "Windows, MS-Office (MS Word, Excel, Powerpoint), ";
                            subject2 = "Internet Working, Tally ERP-9 & English and Hindi Typing [ADCA]";
                        }
                        else if(subject.equals("DCP"))
                        {
                            subject1 = "Windows, MS-Office (MS Word, Excel, Powerpoint), ";
                            subject2 = "JAVA Programming Language (String,Loop,Array & If-Else) [DCP]";
                        }
                        else if(subject.equals("Internet"))
                        {
                            subject1 = "Browsing, Suffering, Login(Sign-Up), Search Engine";
                            subject2 = "Concept, Fill Competition Form & Internet Work [INTERNET]";
                        }
                        else if(subject.equals("Job Training"))
                        {
                            subject1 = "Internet Work, Office Work and Excel Problems";
                            subject2 = "[JOB TRAINING]";
                        }
                        else if(subject.equals("Tally"))
                        {
                            subject1 = "Fianancial Accounting (Manual), Accounting";
                            subject2 = "Standards & Tally E.R.P 9.0";
                        }
                        else
                        {
                            subject1 = subject.toUpperCase();
                        }
                        if(months.equals("3"))
                        {
                            months = "THREE";
                        }
                        else if(months.equals("6"))
                        {
                            months = "SIX";
                        }
                        else if(months.equals("12"))
                        {
                            months = "TWELVE";
                        }
                        else if(months.equals("0.5"))
                        {
                            months = "HALF";
                        }
                        if(srn.equals(esr))
                        {
                            JFrame f14 = new JFrame("Certificate of Student");
                        
                            JLabel cs = new JLabel("Student Certificate");
                            cs.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
                            cs.setBounds(40,10,700,40);
                            cs.setForeground(new Color(0,0,0));
                            
                            JLabel l44 = new JLabel("End Date");
                            l44.setBounds(50,50,150,40);
                                
                            t39 = new JTextField();
                            t39.setText(sedf);
                            t39.setBounds(135,60,150,20);
                                
                            JLabel l45 = new JLabel("Grade");
                            l45.setBounds(50,80,150,40);
                            
                            JComboBox cb2 = new JComboBox(G);
                            cb2.setBounds(135,90,150,20);
                            
                            JButton b44 = new JButton("Print");
                            b44.registerKeyboardAction(b44.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
                            b44.registerKeyboardAction(b44.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
                            b44.setBounds(50,120,90,40);
                            b44.setForeground(new Color(0, 204, 0));
                            b44.setBackground(new Color(255, 255, 204));
                            b44.addActionListener(new ActionListener()
                            {
                                public void actionPerformed(ActionEvent e)
                                {
                                    f14.dispose();
                                    edf="";
                                    grade="";
                                    edf = t39.getText();
                                    grade = ""+cb2.getItemAt(cb2.getSelectedIndex());
                                    
                                    JFrame f15=new JFrame(); 
                
                                    ImageIcon iconi = new ImageIcon("D:\\ICI\\Photos\\Certificate.jpg");
                                    
                                    JLabel image = new JLabel(new ImageIcon("D:\\ICI\\Photos\\"+srn+".jpg")); 
                                    image.setBounds(0,0,1150,330);
                                    
                                    JLabel image0 = new JLabel(srn);
                                    image0.setBounds(308,88,300,40); 
                                    image0.setFont(new Font("Bernard MT Condensed",Font.PLAIN,10));
                                    image0.setForeground(new Color(0,0,0));
                                    
                                    JLabel image1 = new JLabel(name);
                                    image1.setBounds(405,185,300,40); 
                                    image1.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image1.setForeground(new Color(0,0,0));
                                    
                                    JLabel image2 = new JLabel(fname);
                                    image2.setBounds(180,212,300,40); 
                                    image2.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image2.setForeground(new Color(0,0,0));
                                    
                                    JLabel image3 = new JLabel(months);
                                    image3.setBounds(490,242,300,40); 
                                    image3.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image3.setForeground(new Color(0,0,0));
                                    
                                    JLabel image4 = new JLabel(ad);
                                    image4.setBounds(100,270,300,40); 
                                    image4.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image4.setForeground(new Color(0,0,0));
                                    
                                    JLabel image5 = new JLabel(edf);
                                    image5.setBounds(350,270,300,40); 
                                    image5.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image5.setForeground(new Color(0,0,0));
                                    
                                    JLabel image6 = new JLabel(subject1);
                                    image6.setBounds(170,312,1000,40); 
                                    image6.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image6.setForeground(new Color(0,0,0));
                                    
                                    JLabel image8 = new JLabel(subject2);
                                    image8.setBounds(50,340,1000,40); 
                                    image8.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image8.setForeground(new Color(0,0,0));
                                    
                                    JLabel image7 = new JLabel(grade);
                                    image7.setBounds(140,425,300,40); 
                                    image7.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image7.setForeground(new Color(0,0,0));
                                    
                                    f15.add(image);
                                    f15.add(image0);
                                    f15.add(image1);
                                    f15.add(image2);
                                    f15.add(image3);
                                    f15.add(image4);
                                    f15.add(image5);
                                    f15.add(image6);
                                    f15.add(image7);
                                    f15.add(image8);
                                    
                                    f15.add(new JLabel(iconi)); 
                                    
                                    f15.addWindowListener(new WindowAdapter()  
                                    { 
                                        @Override 
                                        public void windowClosing(WindowEvent e) 
                                        { 
                                            f15.dispose();
                                            Options();
                                        } 
                                    });
                                    f15.setIconImage(icon);
                                    f15.pack();
                                    f15.getContentPane().setBackground(new Color(255,255,255));
                                    f15.setLocationRelativeTo(null);
                                    f15.setLayout(null); 
                                    f15.setVisible(true);
                                    PrinterJob job = PrinterJob.getPrinterJob();
                                    job.setPrintable(new Printable() 
                                    {
                                        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                                        throws PrinterException
                                        {
                                            if (pageIndex >= 1) {
                                                return Printable.NO_SUCH_PAGE;
                                            } else {
                                                ((Graphics2D)graphics).translate(pageFormat.getImageableX(), pageFormat.getImageableY());
                                                f15.print(graphics);
                                                return Printable.PAGE_EXISTS;
                                            }
                                        }
                                    });
                                    try
                                    {
                                        if(job.printDialog())
                                        {
                                            job.print();
                                            Thread.sleep(2000);
                                            f15.dispose();
                                            JOptionPane.showMessageDialog(null, "Successfully Printed", "Certificate Print", 1);
                                            Options();
                                        }
                                    }
                                    catch(Exception ex)
                                    {
                                        JOptionPane.showMessageDialog(null, "Cancelled", "Certificate Print", JOptionPane.ERROR_MESSAGE);
                                        Options();
                                    }
                                }
                            });
                            JButton b45 = new JButton("Cancel");
                            b45.registerKeyboardAction(b45.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
                            b45.registerKeyboardAction(b45.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
                            b45.setBounds(180,120,90,40);
                            b45.setForeground(new Color(205, 92, 92));
                            b45.setBackground(new Color(255, 255, 204));
                            b45.addActionListener(new ActionListener()
                            {
                                public void actionPerformed(ActionEvent e)
                                {
                                    JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                                    f14.dispose();
                                    Options();
                                }
                            }
                            );
                            
                            f14.add(cs);
                            f14.add(l44);
                            f14.add(t39);
                            f14.add(l45);
                            f14.add(cb2);
                            f14.add(b44);
                            f14.add(b45);
                            
                            f14.setIconImage(icon);
                            f14.getContentPane().setBackground(new Color(176, 224, 230));
                            f14.addWindowListener(new WindowAdapter() 
                            {
                                @Override
                                public void windowClosing(WindowEvent e) 
                                {
                                    f14.dispose();
                                    Options();
                                }
                            });
                            f14.setSize(340,220);
                            f14.setLocationRelativeTo(null);
                            f14.setLayout(null);
                            f14.setVisible(true);
                        }
                        else
                        {
                            JFrame f14 = new JFrame("Certificate of Student");
                        
                            JLabel cs = new JLabel("Student Certificate");
                            cs.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
                            cs.setBounds(40,10,700,40);
                            cs.setForeground(new Color(0,0,0));
                            
                            JLabel l44 = new JLabel("End Date");
                            l44.setBounds(50,50,150,40);
                                
                            t39 = new JTextField();
                            t39.setBounds(135,60,150,20);
                                
                            JLabel l45 = new JLabel("Grade");
                            l45.setBounds(50,80,150,40);
                            
                            JComboBox cb2 = new JComboBox(G);
                            cb2.setBounds(135,90,150,20);
                            
                            JButton b44 = new JButton("Print");
                            b44.registerKeyboardAction(b44.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
                            b44.registerKeyboardAction(b44.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
                            b44.setBounds(50,120,90,40);
                            b44.setForeground(new Color(0, 204, 0));
                            b44.setBackground(new Color(255, 255, 204));
                            b44.addActionListener(new ActionListener()
                            {
                                public void actionPerformed(ActionEvent e)
                                {
                                    f14.dispose();
                                    edf="";
                                    grade="";
                                    edf = t39.getText();
                                    grade = ""+cb2.getItemAt(cb2.getSelectedIndex());
                                    
                                    JFrame f15=new JFrame(); 
                
                                    ImageIcon iconi = new ImageIcon("D:\\ICI\\Photos\\Certificate.jpg");
                                    
                                    JLabel image = new JLabel(new ImageIcon("D:\\ICI\\Photos\\"+srn+".jpg")); 
                                    image.setBounds(0,0,1150,330);
                                    
                                    JLabel image0 = new JLabel(srn);
                                    image0.setBounds(308,88,300,40); 
                                    image0.setFont(new Font("Bernard MT Condensed",Font.PLAIN,10));
                                    image0.setForeground(new Color(0,0,0));
                                    
                                    JLabel image1 = new JLabel(name);
                                    image1.setBounds(405,185,300,40); 
                                    image1.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image1.setForeground(new Color(0,0,0));
                                    
                                    JLabel image2 = new JLabel(fname);
                                    image2.setBounds(180,212,300,40); 
                                    image2.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image2.setForeground(new Color(0,0,0));
                                    
                                    JLabel image3 = new JLabel(months);
                                    image3.setBounds(490,242,300,40); 
                                    image3.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image3.setForeground(new Color(0,0,0));
                                    
                                    JLabel image4 = new JLabel(ad);
                                    image4.setBounds(100,270,300,40); 
                                    image4.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image4.setForeground(new Color(0,0,0));
                                    
                                    JLabel image5 = new JLabel(edf);
                                    image5.setBounds(350,270,300,40); 
                                    image5.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image5.setForeground(new Color(0,0,0));
                                    
                                    JLabel image6 = new JLabel(subject1);
                                    image6.setBounds(170,312,1000,40); 
                                    image6.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image6.setForeground(new Color(0,0,0));
                                    
                                    JLabel image8 = new JLabel(subject2);
                                    image8.setBounds(50,340,1000,40); 
                                    image8.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image8.setForeground(new Color(0,0,0));
                                    
                                    JLabel image7 = new JLabel(grade);
                                    image7.setBounds(140,425,300,40); 
                                    image7.setFont(new Font("Arial Black",Font.PLAIN,16));
                                    image7.setForeground(new Color(0,0,0));
                                    
                                    f15.add(image);
                                    f15.add(image0);
                                    f15.add(image1);
                                    f15.add(image2);
                                    f15.add(image3);
                                    f15.add(image4);
                                    f15.add(image5);
                                    f15.add(image6);
                                    f15.add(image7);
                                    f15.add(image8);
                                    
                                    f15.add(new JLabel(iconi)); 
                                    
                                    f15.addWindowListener(new WindowAdapter()  
                                    { 
                                        @Override 
                                        public void windowClosing(WindowEvent e) 
                                        { 
                                            f15.dispose();
                                            Options();
                                        } 
                                    });
                                    f15.setIconImage(icon);
                                    f15.pack();
                                    f15.getContentPane().setBackground(new Color(255,255,255));
                                    f15.setLocationRelativeTo(null);
                                    f15.setLayout(null); 
                                    f15.setVisible(true);
                                    PrinterJob job = PrinterJob.getPrinterJob();
                                    job.setPrintable(new Printable() 
                                    {
                                        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                                        throws PrinterException
                                        {
                                            if (pageIndex >= 1) {
                                                return Printable.NO_SUCH_PAGE;
                                            } else {
                                                ((Graphics2D)graphics).translate(pageFormat.getImageableX(), pageFormat.getImageableY());
                                                f15.print(graphics);
                                                return Printable.PAGE_EXISTS;
                                            }
                                        }
                                    });
                                    try
                                    {
                                        if(job.printDialog())
                                        {
                                            job.print();
                                            Thread.sleep(2000);
                                            f15.dispose();
                                            JOptionPane.showMessageDialog(null, "Successfully Printed", "Certificate Print", 1);
                                            Options();
                                        }
                                    }
                                    catch(Exception ex)
                                    {
                                        JOptionPane.showMessageDialog(null, "Cancelled", "Certificate Print", JOptionPane.ERROR_MESSAGE);
                                        Options();
                                    }
                                }
                            });
                            JButton b45 = new JButton("Cancel");
                            b45.registerKeyboardAction(b45.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
                            b45.registerKeyboardAction(b45.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
                            b45.setBounds(180,120,90,40);
                            b45.setForeground(new Color(205, 92, 92));
                            b45.setBackground(new Color(255, 255, 204));
                            b45.addActionListener(new ActionListener()
                            {
                                public void actionPerformed(ActionEvent e)
                                {
                                    JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                                    f14.dispose();
                                    Options();
                                }
                            }
                            );
                            
                            f14.add(cs);
                            f14.add(l44);
                            f14.add(t39);
                            f14.add(l45);
                            f14.add(cb2);
                            f14.add(b44);
                            f14.add(b45);
                            
                            f14.setIconImage(icon);
                            f14.getContentPane().setBackground(new Color(176, 224, 230));
                            f14.addWindowListener(new WindowAdapter() 
                            {
                                @Override
                                public void windowClosing(WindowEvent e) 
                                {
                                    f14.dispose();
                                    Options();
                                }
                            });
                            f14.setSize(340,220);
                            f14.setLocationRelativeTo(null);
                            f14.setLayout(null);
                            f14.setVisible(true);
                        }
                    }
                    catch(Exception h)
                    {
                        System.err.println(h);
                        f13.dispose();
                        Options();
                    }
                }
            });
            JButton b46 = new JButton("Cancel");
            b46.registerKeyboardAction(b46.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
            b46.registerKeyboardAction(b46.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
            b46.setBounds(180,90,90,40);
            b46.setForeground(new Color(205, 92, 92));
            b46.setBackground(new Color(255, 255, 204));
            b46.addActionListener(new ActionListener()
            {
                public void actionPerformed(ActionEvent e)
                {
                    JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                    f13.dispose();
                    Options();
                }
            }
            );
                        
            f13.add(cs);
            f13.add(l43);
            f13.add(t38);
            f13.add(b43);
            f13.add(b46);
                        
            f13.setIconImage(icon);
            f13.getContentPane().setBackground(new Color(176, 224, 230));
            f13.addWindowListener(new WindowAdapter() 
            {
                @Override
                public void windowClosing(WindowEvent e) 
                {
                    f13.dispose();
                    Options();
                }
            });
            f13.setSize(340,190);
            f13.setLocationRelativeTo(null);
            f13.setLayout(null);
            f13.setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "You don't have an access to this", "Certificate", 2);
            Options();
        }
    }
    void DE()
    {
        JFrame def = new JFrame("Details Edit");
        
        JLabel del = new JLabel("Details Edit");
        del.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        del.setBounds(100,10,700,40);
        del.setForeground(new Color(0,0,0));
        
        JLabel l44 = new JLabel("Serial Number");
        l44.setBounds(50,50,150,40);
        
        JTextField t39 = new JTextField();
        t39.setBounds(135,60,150,20);
        
        JButton b47 = new JButton("Student Details");
        b47.registerKeyboardAction(b47.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b47.registerKeyboardAction(b47.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b47.setBounds(50,90,120,40);
        b47.setForeground(new Color(0, 204, 0));
        b47.setBackground(new Color(255, 255, 204));
        b47.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                String fde="";
                def.dispose();
                srn = t39.getText();
                try
                {
                    FileReader fr = new FileReader("D:\\ICI\\Students\\"+srn+".txt");
                    BufferedReader br = new BufferedReader(fr);
                    text="";
                    i=0;
                    while((text=br.readLine())!=null)
                    {
                        sdetails[i] = text;
                        i++;
                    }
                    br.close();
                    FileReader fr1 = new FileReader("D:\\ICI\\Fees\\"+srn+".txt");
                    BufferedReader br1 = new BufferedReader(fr1);
                    fde="";
                    text="";
                    i=0;
                    while((text=br1.readLine())!=null)
                    {
                        fde = fde+""+text+"\n";
                        i++;
                    }
                    fde = fde.trim();
                    JFrame sd = new JFrame("Student Details Edit");
                        
                    JLabel del = new JLabel("Details Edit");
                    del.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
                    del.setBounds(280,10,700,40);
                    del.setForeground(new Color(0,0,0));
                        
                    JLabel l45 = new JLabel("Admission Date");
                    l45.setBounds(50,50,150,40);
                        
                    JTextField t40 = new JTextField(sdetails[0]);
                    t40.setBounds(150,60,150,20);
                        
                    JLabel l46 = new JLabel("Date of Birth");
                    l46.setBounds(50,80,150,40);
                        
                    JTextField t41 = new JTextField(sdetails[1]);
                    t41.setBounds(150,90,150,20);
                        
                    JLabel l47 = new JLabel("Name");
                    l47.setBounds(50,110,150,40);
                        
                    JTextField t42 = new JTextField(sdetails[3]);
                    t42.setBounds(150,120,150,20);
                        
                    JLabel l48 = new JLabel("Father Name");
                    l48.setBounds(50,140,150,40);
                        
                    JTextField t43 = new JTextField(sdetails[4]);
                    t43.setBounds(150,150,150,20);
                        
                    JLabel l49 = new JLabel("Address");
                    l49.setBounds(50,170,150,40);
                        
                    JTextField t44 = new JTextField(sdetails[5]);
                    t44.setBounds(150,180,150,20);
                        
                    JLabel l50 = new JLabel("Qualification");
                    l50.setBounds(50,200,150,40);
                        
                    JTextField t45 = new JTextField(sdetails[6]);
                    t45.setBounds(150,210,150,20);
                        
                    JLabel l51 = new JLabel("Mobile Number");
                    l51.setBounds(50,230,150,40);
                        
                    JTextField t46 = new JTextField(sdetails[7]);
                    t46.setBounds(150,240,150,20);
                        
                    JLabel l52 = new JLabel("Course Name");
                    l52.setBounds(50,260,150,40);
                        
                    JTextField t47 = new JTextField(sdetails[8]);
                    t47.setBounds(150,270,150,20);
                        
                    JLabel l53 = new JLabel("Months");
                    l53.setBounds(50,290,150,40);
                        
                    JTextField t48 = new JTextField(sdetails[9]);
                    t48.setBounds(150,300,150,20);
                            
                    JLabel l54 = new JLabel("Fees");
                    l54.setBounds(50,320,150,40);
                        
                    JTextField t49 = new JTextField(sdetails[10]);
                    t49.setBounds(150,330,150,20);
                    
                    JTextArea t50 = new JTextArea(fde);
                    t50.setBounds(320,50,400,330);
                    
                    JButton b48 = new JButton("Submit");
                    b48.registerKeyboardAction(b48.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
                    b48.registerKeyboardAction(b48.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
                    b48.setBounds(50,370,90,40);
                    b48.setForeground(new Color(0, 204, 0));
                    b48.setBackground(new Color(255, 255, 204));
                    b48.addActionListener(new ActionListener()
                    {
                        public void actionPerformed(ActionEvent e)
                        {
                            sr = srn;
                            ad = t40.getText();
                            dob = t41.getText();
                            name = t42.getText();
                            fname = t43.getText();
                            address = t44.getText();
                            qualify = t45.getText();
                            mobile = t46.getText();
                            subject = t47.getText();
                            months = t48.getText();
                            fees = t49.getText();
                            String ffde = t50.getText();
                            try
                            {
                                FileWriter fw = new FileWriter("D:\\ICI\\Students\\"+srn+".txt");
                                BufferedWriter bw = new BufferedWriter(fw);
                                PrintWriter pw = new PrintWriter(bw);
                                pw.println(ad);
                                pw.println(dob);
                                pw.println(srn);
                                pw.println(name);
                                pw.println(fname);
                                pw.println(address);
                                pw.println(qualify);
                                pw.println(mobile);
                                pw.println(subject);
                                pw.println(months);
                                pw.println(fees);
                                bw.close();
                                
                                FileWriter fw1 = new FileWriter("D:\\ICI\\Fees\\"+srn+".txt");
                                BufferedWriter bw1 = new BufferedWriter(fw1);
                                PrintWriter pw1 = new PrintWriter(bw1);
                                pw1.println(ffde);
                                bw1.close();
                                JOptionPane.showMessageDialog(null, "Successfully Updated", "Student Details", 1);
                                sd.dispose();
                                DE();
                            }
                            catch(Exception h)
                            {
                                JOptionPane.showMessageDialog(null, "ErrorU", "Error", JOptionPane.ERROR_MESSAGE);
                                sd.dispose();
                                DE();
                            }
                        }
                    });
                        
                    JButton b49 = new JButton("Cancel");
                    b49.registerKeyboardAction(b49.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
                    b49.registerKeyboardAction(b49.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
                    b49.setBounds(210,370,90,40);
                    b49.setForeground(new Color(205, 92, 92));
                    b49.setBackground(new Color(255, 255, 204));
                    b49.addActionListener(new ActionListener()
                    {
                        public void actionPerformed(ActionEvent e)
                        {
                            JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancelled", JOptionPane.ERROR_MESSAGE);
                            sd.dispose();
                            DE();
                        }
                    });
                        
                    sd.add(del);
                    sd.add(l45);
                    sd.add(t40);
                    sd.add(l46);
                    sd.add(t41);
                    sd.add(l47);
                    sd.add(t42);
                    sd.add(l48);
                    sd.add(t43);
                    sd.add(l49);
                    sd.add(t44);
                    sd.add(l50);
                    sd.add(t45);
                    sd.add(l51);
                    sd.add(t46);
                    sd.add(l52);
                    sd.add(t47);
                    sd.add(l53);
                    sd.add(t48);
                    sd.add(l54);
                    sd.add(t49);
                    sd.add(b48);
                    sd.add(b49);
                    sd.add(t50);
                    
                    sd.setIconImage(icon);
                    sd.addWindowListener(new WindowAdapter()
                    {
                        @Override
                        public void windowClosing(WindowEvent e)
                        {
                            sd.dispose();
                            DE();
                        }
                    }
                    );
                    sd.getContentPane().setBackground(new Color(176, 224, 230));
                    sd.setSize(780,470);
                    sd.setLocationRelativeTo(null);
                    sd.setLayout(null);
                    sd.setVisible(true);
                }   
                catch(Exception h)
                {
                     JOptionPane.showMessageDialog(null, "Student Not Found", "Error", JOptionPane.ERROR_MESSAGE);
                     DE();
                }
            }
        });
        
        JButton b50 = new JButton("Cancel");
        b50.registerKeyboardAction(b50.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b50.registerKeyboardAction(b50.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b50.setBounds(190,90,90,40);
        b50.setForeground(new Color(205, 92, 92));
        b50.setBackground(new Color(255, 255, 204));
        b50.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Cancelled", JOptionPane.ERROR_MESSAGE);
                def.dispose();
                Options();
            }
        }
        );
        
        def.add(del);
        def.add(l44);
        def.add(t39);
        def.add(b47);
        def.add(b50);
        
        def.setIconImage(icon);
        def.addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                def.dispose();
                Options();
            }
        }
        );
        def.getContentPane().setBackground(new Color(176, 224, 230));
        def.setSize(350,190);
        def.setLocationRelativeTo(null);
        def.setLayout(null);
        def.setVisible(true);
    }
    void Password()
    {
        f7 = new JFrame("Password Reset");
        
        pass = new JLabel("PASSWORD RESET");
        pass.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        pass.setBounds(120,10,700,40);
        pass.setForeground(new Color(0,0,0));
        
        l31 = new JLabel("Username");
        l31.setBounds(50,50,150,40);
        
        t28 = new JTextField();
        t28.setBounds(160,60,150,20);
        
        l32 = new JLabel("New Password");
        l32.setBounds(50,80,150,40);
        
        p2 = new JPasswordField();
        p2.setBounds(160,90,150,20);
        
        t29 = new JTextField();
        t29.setBounds(320,90,150,20);
        t29.setEditable(false);
        
        l33 = new JLabel("Confirm Password");
        l33.setBounds(50,110,150,40);
        
        p3 = new JPasswordField();
        p3.setBounds(160,120,150,20);
        
        t30 = new JTextField();
        t30.setBounds(320,120,150,20);
        t30.setEditable(false);
        
        b26 = new JButton("Change");
        b26.registerKeyboardAction(b26.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b26.registerKeyboardAction(b26.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b26.setBounds(70,150,90,40);
        b26.setForeground(new Color(0, 204, 0));
        b26.setBackground(new Color(255, 255, 204));
        b26.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                user = t28.getText();
                password = ""+(new String(p2.getPassword()));
                cpass = ""+(new String(p3.getPassword()));
                t29.setText(password);
                t30.setText(cpass);
                int i, n, a, c;
                char ch, ch1;
                String s, F1="", F="";
                n = user.length();
                for(i=0; i<n; i++)
                {
                    ch = user.charAt(i);
                    if(ch!=' ')
                    {
                        a = (int)ch;
                        if(a>=65 && a<=77)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>77 && a<=90)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>=97 && a<=109)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>109 && a<=122)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>=48 && a<=57)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a==64)
                        {
                            ch1 = ch;
                            F = F+""+ch1;
                        }
                        else if(a==45)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                    }
                    else
                    {
                        c = 45;
                        ch1 = (char)c;
                        F = F+""+ch1;
                    }
                }
                n = password.length();
                for(i=0; i<n; i++)
                {
                    ch = password.charAt(i);
                    if(ch!=' ')
                    {
                        a = (int)ch;
                        if(a>=65 && a<=77)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>77 && a<=90)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>=97 && a<=109)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>109 && a<=122)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>=48 && a<=57)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a==64)
                        {
                            ch1 = ch;
                            F1 = F1+""+ch1;
                        }
                        else if(a==45)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                    }
                    else
                    {
                        c = 45;
                        ch1 = (char)c;
                        F1 = F1+""+ch1;
                    }
                }
                file12 = "D:\\ICI\\Employee\\"+F+".txt";
                try
                {
                    FileReader fr = new FileReader(file12);
                    BufferedReader br = new BufferedReader(fr);
                    userpass="";
                    i=0;
                    while((userpass=br.readLine())!=null)
                    {
                        upa[i] = userpass;
                        i++;
                    }
                    br.close();
                    if(upa[0].equals(F) && password.equals(cpass) && !F1.equals(upa[1]))
                    {
                        file12 = "D:\\ICI\\Employee\\"+F+".txt";
                        try
                        {
                            FileWriter fw = new FileWriter(file12);
                            BufferedWriter bw = new BufferedWriter(fw);
                            PrintWriter pw = new PrintWriter(bw);
                            pw.println(F);
                            pw.println(F1);
                            pw.close();
                            JOptionPane.showMessageDialog(null, "Sucessfully Password Changed", "Password", 1);
                            f7.dispose();
                            Login();
                        }
                        catch(Exception h)
                        {
                            JOptionPane.showMessageDialog(null, "Employee Not Found", "Password", 1);
                        }
                    }
                    else if(!upa[0].equals(F))
                    {
                        JOptionPane.showMessageDialog(null, "Employee Not Found", "Password", 1);
                    }
                    else if(upa[0].equals(F) && F1.equals(upa[1]) && password.equals(cpass))
                    {
                        JOptionPane.showMessageDialog(null, "This is the old Password", "Password", 1);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Passwod Doesn't Match", "Password", 1);
                    }
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "Employee Not Found", "Password", 1);
                }
            }
        });
        
        b27 = new JButton("Cancel");
        b27.registerKeyboardAction(b27.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b27.registerKeyboardAction(b27.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b27.setBounds(180,150,90,40);
        b27.setForeground(new Color(205, 92, 92));
        b27.setBackground(new Color(255, 255, 204));
        b27.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                f7.dispose();
                Login();
            }
        }
        );
        
        f7.add(pass);
        f7.add(l31);
        f7.add(t28);
        f7.add(l32);
        f7.add(p2);
        f7.add(p3);
        f7.add(t29);
        f7.add(l33);
        f7.add(t30);
        f7.add(b26);
        f7.add(b27);
        
        f7.setIconImage(icon);
        f7.getContentPane().setBackground(new Color(176, 224, 230));
        f7.addWindowListener(new WindowAdapter() 
        {
            @Override
            public void windowClosing(WindowEvent e) 
            {
                f7.dispose();
                Login();
            }
        });
        f7.setSize(500,300);
        f7.setLocationRelativeTo(null);
        f7.setLayout(null);
        f7.setVisible(true);
    }
    void SignUp()
    {
        f8 = new JFrame("Sign Up");
        
        sign = new JLabel("CREATING ACCOUNT");
        sign.setFont(new Font("Bernard MT Condensed",Font.BOLD,32));
        sign.setBounds(65,10,700,40);
        sign.setForeground(new Color(0,0,0));
        
        l34 = new JLabel("Username: ");
        l34.setBounds(50,50,150,40);
        
        t31 = new JTextField();
        t31.setBounds(120,60,150,20);
        
        l35 = new JLabel("Password: ");
        l35.setBounds(50,80,150,40);
        
        p4 = new JPasswordField();
        p4.setBounds(120,90,150,20);
        
        show1 = new JLabel();
        show1.setBounds(120,120,150,20);
        
        b28 = new JButton("Show");
        b28.registerKeyboardAction(b28.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b28.registerKeyboardAction(b28.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b28.setBounds(280,90,69,20);
        b28.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                password = ""+new String(p4.getPassword());
                show1.setText(password);
            }
        }
        );
        
        b29 = new JButton("Sign Up");
        b29.registerKeyboardAction(b29.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b29.registerKeyboardAction(b29.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b29.setBounds(50,140,100,40);
        b29.setForeground(new Color(0, 204, 0));
        b29.setBackground(new Color(255, 255, 204));
        b29.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                user = t31.getText();
                password = ""+(new String(p4.getPassword()));
                int i, n, a, c;
                char ch, ch1;
                String s, F1="", F="";
                n = user.length();
                for(i=0; i<n; i++)
                {
                    ch = user.charAt(i);
                    if(ch!=' ')
                    {
                        a = (int)ch;
                        if(a>=65 && a<=77)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>77 && a<=90)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>=97 && a<=109)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>109 && a<=122)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a>=48 && a<=57)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else if(a==64)
                        {
                            ch1 = ch;
                            F = F+""+ch1;
                        }
                        else if(a==45)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                        else
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F = F+""+ch1;
                        }
                    }
                    else
                    {
                        c = 45;
                        ch1 = (char)c;
                        F = F+""+ch1;
                    }
                }
                n = password.length();
                for(i=0; i<n; i++)
                {
                    ch = password.charAt(i);
                    if(ch!=' ')
                    {
                        a = (int)ch;
                        if(a>=65 && a<=77)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>77 && a<=90)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>=97 && a<=109)
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>109 && a<=122)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a>=48 && a<=57)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else if(a==64)
                        {
                            ch1 = ch;
                            F1 = F1+""+ch1;
                        }
                        else if(a==45)
                        {
                            c = a-13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                        else
                        {
                            c = a+13;
                            ch1 = (char)c;
                            F1 = F1+""+ch1;
                        }
                    }
                    else
                    {
                        c = 45;
                        ch1 = (char)c;
                        F1 = F1+""+ch1;
                    }
                }
                file12 = "D:\\ICI\\Employee\\"+F+".txt";
                try
                {
                    FileWriter fw = new FileWriter(file12);
                    BufferedWriter bw = new BufferedWriter(fw);
                    PrintWriter pw = new PrintWriter(bw);
                    pw.println(F);
                    pw.println(F1);
                    pw.close();
                    JOptionPane.showMessageDialog(null, "Successfully Account Created", "Sign Up", 1);
                    f8.dispose();
                    Login();
                }
                catch(Exception h)
                {
                    JOptionPane.showMessageDialog(null, "File not Created", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        );
        
        b30 = new JButton("Cancel");
        b30.registerKeyboardAction(b30.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),JComponent.WHEN_FOCUSED);
        b30.registerKeyboardAction(b30.getActionForKeyStroke(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),JComponent.WHEN_FOCUSED);
        b30.setBounds(180,140,90,40);
        b30.setForeground(new Color(205, 92, 92));
        b30.setBackground(new Color(255, 255, 204));
        b30.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                JOptionPane.showMessageDialog(null, "Cancelled by User", "Error", JOptionPane.ERROR_MESSAGE);
                f8.dispose();
                Login();
            }
        }
        );
        
        f8.add(sign);
        f8.add(l34);
        f8.add(t31);
        f8.add(l35);
        f8.add(p4);
        f8.add(show1);
        f8.add(b28);
        f8.add(b29);
        f8.add(b30);
        
        f8.setIconImage(icon);
        f8.getContentPane().setBackground(new Color(176, 224, 230));
        f8.addWindowListener(new WindowAdapter() 
        {
            @Override
            public void windowClosing(WindowEvent e) 
            {
                f8.dispose();
                Exit();
            }
        });
        f8.setSize(400,250);
        f8.setLocationRelativeTo(null);
        f8.setLayout(null);
        f8.setVisible(true);
    }
    void Exit()
    {
        SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        if(!DT.equals(" "))
        {
            try
            {
                FileWriter fw = new FileWriter("D:\\ICI\\ICI sources\\Date.txt");
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);
                pw.println("Last Opened Date:  "+DT);
                pw.close();
            }
            catch(Exception h)
            {
                System.err.println(h);
            }
        }
        if(!sr.equals(" "))
        {
            try
            {
                FileWriter fw1 = new FileWriter("D:\\ICI\\ICI sources\\Date1.txt");
                BufferedWriter bw1 = new BufferedWriter(fw1);
                PrintWriter pw1 = new PrintWriter(bw1);
                File fileName1 = new File("D:\\ICI\\Fees\\"+sr+".txt");
                pw1.println("Last Modified Date: "+sdf1.format(fileName1.lastModified()));
                pw1.close();
            }
            catch(Exception h)
            {
                System.err.println(h);
            }
        }
        JOptionPane.showMessageDialog(null, "All Data Saved to: D:\\ICI\n\nThanks for secure Login", "Exit!", 2);
        System.exit(0);
    }
    public static void main(String args[])
    {
        ICI ob = new ICI();
        ob.Login();
    }
}
// Thank You